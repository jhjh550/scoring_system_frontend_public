{"version":3,"sources":["components/common/Responsive.js","lib/styles/palette.js","components/common/Button.js","components/common/Header.js","lib/api/client.js","lib/api/auth.js","modules/loading.js","lib/createRequestSaga.js","modules/user.js","containers/common/HeaderContainer.js","components/common/Criterias.js","components/common/AskModal.js","components/criterias/AskRemoveModal.js","components/criteria/CriteriaReadActionButtons.js","lib/api/criteria.js","components/criterias/CriteriaList.js","modules/criterias.js","modules/criteria.js","containers/criterias/CriteriaListContainer.js","pages/CriteriaListPage.js","components/common/SubInfo.js","components/criteria/CriteriaViewer.js","containers/criteria/CriteriaViewerContainer.js","pages/CriteriaPage.js","components/criteria/AskAnswerAreaModal.js","lib/api/testinfo.js","components/criteria/Editor.js","containers/criteria/EditorContainer.js","components/criteria/CriteriaInputBox.js","containers/criteria/CriteriaBoxContainer.js","components/criteria/CriteriaActionButtons.js","containers/criteria/CriteriaActionButtonsContainer.js","pages/CriteriaWritePage.js","components/auth/AuthTemplate.js","modules/auth.js","components/auth/AuthForm.js","containers/auth/RegisterForm.js","pages/RegisterPage.js","containers/auth/LoginForm.js","pages/LoginPage.js","pages/ReadCriteriaPage.js","components/testinfo/AskRemoveTestInfoModal.js","components/common/MyDatePicker.js","components/testinfo/AskModifyTestInfoModal.js","components/testinfo/TestInfoItem.js","components/common/AskSettingsModal.js","components/testinfo/AskCreateTestInfoModal.js","components/testinfo/TestInfoListComponent.js","modules/testinfos.js","modules/testinfo.js","modules/testinfo_update.js","containers/testinfo/TestInfoListContainer.js","pages/TestInfoListPage.js","components/score/TestScoreListComponent.js","containers/score/TestScoreListContainer.js","pages/TestScoreListPage.js","modules/score.js","lib/api/score.js","components/score/AskFullScreenImgViewerModal.js","components/score/ScoreCriteriaItem.js","components/score/ScoreComponent.js","containers/score/ScoreContainer.js","pages/ScorePage.js","modules/scores.js","components/score/Common/ScoreBlocks.js","components/score/ScoreItemComponent.js","components/score/ScoredListComponent.js","containers/score/ScoredListContainer.js","components/score/Pagination.js","containers/score/PaginationContainer.js","pages/ScoredListPage.js","containers/score/ScoreEditContainer.js","pages/ScoreEditPage.js","components/start/StartAdminPageComponent.js","components/start/StartPageComponent.js","containers/start/StartPageContainer.js","pages/StartPage.js","components/criterias/ScorerEditItemComponent.js","components/score/ScorerManageComponent.js","containers/score/ScorerManageContainer.js","pages/ScorerManagePage.js","components/score/ScoreMyCriteriaItemComponent.js","components/score/ScoreMyCriteriaComponent.js","modules/stat.js","lib/api/stat.js","containers/score/ScoreMyCriteriaListContainer.js","pages/ScoreMyListPage.js","components/result/ScoreResultListComponent.js","containers/result/ScoreResultListContainer.js","pages/ScoreResultListPage.js","modules/export_excel.js","lib/api/export.js","components/result/ScoreResultComponent.js","containers/result/ScoreResultContainer.js","pages/ScoreResultPage.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["ResponsiveBlock","styled","div","Responsive","children","rest","palette","gray","cyan","buttonStyle","css","props","fullWidth","big","StyledButton","button","StyledLink","Link","Button","to","HeaderBlock","Wrapper","HeadWrapper","Spacer","UserInfo","Header","user","onLogout","onHeadClick","className","onClick","username","client","axios","create","logout","post","startLoading","createAction","requestType","finishLoading","loading","handleActions","state","action","payload","createRequestActionTypes","type","createRequestSaga","request","SUCCESS","FAILURE","put","call","response","data","meta","error","logoutSaga","userSaga","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","check","checkSaga","get","checkFailureSaga","localStorage","removeItem","e","console","log","authAPI","takeLatest","checkError","admin","withRouter","history","useSelector","score","dispatch","useDispatch","useEffect","push","CriteriasBlock","Criterias","criterias","map","criteria","index","key","text","FullScreen","AskModalBlock","AskModal","visible","title","description","confirmText","cancelText","onConfirm","onCancel","showCancel","showProgressbar","color","height","width","AskRemoveModal","CriteriaReadActionButtonsBlock","ActionButton","CriteriaReadActionButtons","onRemove","useState","modal","setModal","updateCriterias","a","changedCriterias","patch","obj","CriteriaListBlock","WriteCriteriaButtonWrapper","CriteriaItemBlock","CriteriaItem","onReload","onTempChangeField","showWriteButton","question","details","_id","id","delete","no","CriteriaList","testinfoId","writeLink","criteriasSage","initializeList","changeCriterias","LIST_CRITERIA","LIST_CRITERIA_SUCCESS","LIST_CRITERIA_FAILURE","listCriteria","testName","page","userId","scoreAuth","questionNo","listCriteriaSaga","queryString","qs","stringify","UPDATE_CRITERIAS","UPDATE_CRITERIAS_SUCCESS","UPDATE_CRITERIAS_FAILURE","updateCriteriasSaga","criteriaAPI","initialState","result","lastPage","parseInt","headers","writeCriteriaSaga","readCriteriaSaga","UPDATE_CRITERIA","UPDATE_CRITERIA_SUCCESS","UPDATE_CRITERIA_FAILURE","updateCriteria","criteriaId","updateCriteriaSaga","catch","WRITE_CRITERIA","WRITE_CRITERIA_SUCCESS","WRITE_CRITERIA_FAILURE","initialize","setCriteria","changeField","value","changeQuestionAction","writeCriteriaAction","writeCriteriaRequestSaga","READ_CRITERIA","READ_CRITERIA_SUCCESS","READ_CRITERIA_FAILURE","readCriteriaAction","unloadCriteriaAction","readCriteriaRequestSaga","area","xPox","yPos","imgFileName","criteriaReceived","criteriaError","location","match","params","parse","search","ignoreQueryPrefix","useCallback","window","reload","CriteriaListPage","SubInfoBlock","hasMarginTop","SubInfo","publishedDate","Date","toLocaleDateString","CriteriaViewerBlock","CriteriaHead","CriteriaViewer","respose","CriteriaPage","Container","Nav","Section","ButtonWrapperBlock","ButtonHolder","FileNameBlock","active","AreaWrapper","ImgWrapper","ZoomButtonWrapper","ZoomButton","AnswerArea","AskAnswerAreaModal","fileNames","onChangeField","selectedFileName","setSelectedFileName","zoomRatio","setZoomRatio","drag","setDrag","xPos","setXPos","setYPos","setWidth","setHeight","initFileName","ImgOriginX","useRef","scrollXOffset","setScrollXOffset","imgEl","onItemClick","clickedFileName","target","getAttribute","initArea","styles","transformOrigin","transform","answerAreaStyle","left","top","opacity","background","name","onScroll","x","current","getBoundingClientRect","diff","onMouseDown","preventDefault","nativeEvent","offsetX","offsetY","onMouseUp","onMouseMove","newWidth","newHeight","onLoad","ref","style","src","encodeURI","deleteAllData","res","getTestImages","generateTestInfo","generateEmptyScoreInfo","EditorBlock","TitleInput","input","LeftBox","RightBox","AnswerAreaBlock","ImgBlock","img","Editor","setFileNames","onAreaSetButtonClick","files","imgPath","autoFocus","placeholder","onChange","onFocus","select","testinfo","CriteriaInputBoxBlock","CriteriaForm","form","InputItemPoint","InputItemCriteria","Criteria","React","memo","point","CriteriaInputBox","onChangeCriterias","setInput","setPoint","localCriterias","setLocalCriterias","errorModal","setErrorModal","errorMsg","setErrorMsg","insertCriteria","newCriteria","nextCriterias","removeCriteria","filter","t","onChangePoint","onSubmit","trim","handleFocus","undefined","min","CriteriaBoxContainer","CriteriaActionButtonsBlock","CriteriaActionButtons","onPublish","desc","goBack","CriteriaWritePage","AuthTemplateBlock","WhiteBox","AuthTemplate","authSaga","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","initializeForm","register","password","login","registerSaga","loginSaga","passwordConfirm","auth","authError","produce","draft","AuthFormBlock","StyledInput","Footer","ButtonWithMarginTop","textMap","ErrorMessage","AuthForm","autoComplete","marginTop","setError","status","setItem","JSON","includes","RegisterPage","LoginPage","ReadCriteriaPage","AskRemoveTestInfoModal","DateInputWrapper","DateInput","OpenCalendarWrapper","span","MyDatePicker","selectedDate","locale","defaultValue","timeFormat","dateFormat","year","format","month","day","renderInput","openCalendar","closeCalendar","closeOnSelect","CreateTestInfoModalBlock","CodeInputWrapper","AskModifyTestInfoModal","testinfo_update","onChangeUpdateField","testDate","testCode","TestInfoItemBlock","TestInfoTextBlock","ButtonBlockWrapper","ButtonBlock","TestInfoItem","onSetTestInfo","onSetUpdateInfo","onUpdate","updateModal","setUpdateModal","SettingsModalBlock","ScoringPrepareButtonBlock","AskSettingsModal","onGenerateEmptyScoreInfo","onGenerateTestInfo","onDeleteAllData","onCreateButtonClicked","lastGeneratedScore","totalCount","waitModal","setWaitModal","AskCreateTestInfoModal","GlobalStyle","createGlobalStyle","TestInfoListBlock","TestInfoListTitle","TestInfoListBody","NewTestButtonWrapper","SettingsWrppaer","TestInfoListComponent","testinfos","settginsModal","setSettingsModal","onSettingsModalClick","listTestinfoRequestSaga","LIST_TESTINFO","LIST_TESTINFO_SUCCESS","LIST_TESTINFO_FAILURE","listTestinfo","listTestinfoSaga","pageQueryString","GENERATE_EMPTY_SCORE_INFO","GENERATE_EMPTY_SCORE_INFO_SUCCESS","GENERATE_EMPTY_SCORE_INFO_FAILURE","generateEmptyScoreInfoRequestSage","testinfoAPI","GENERATE_TEST_INFO","GENERATE_TEST_INFO_SUCCESS","GENERATE_TEST_INFO_FAILURE","generateTestInfoRequestSage","DELETE_ALL_DATA","DELETE_ALL_DATA_SUCCESS","DELETE_ALL_DATA_FAILURE","deleteAllDataAction","deleteAllDataRequestSaga","testInfoSaga","WRITE_TESTINFO","WRITE_TESTINFO_SUCCESS","WRITE_TESTINFO_FAILURE","setTestinfo","writeTestinfoAction","writeTestinfoRequestSaga","READ_TESTINFO","READ_TESTINFO_SUCCESS","READ_TESTINFO_FAILURE","DELETE_TESTINFO","DELETE_TESTINFO_SUCCESS","DELETE_TESTINFO_FAILURE","deleteTestinfoAction","readTestinfoRequestSaga","deleteTestinfoRequestSaga","testinfoReceived","testinfoError","testinfoUpdateSaga","UPDATE_TESTINFO","UPDATE_TESTINFO_SUCCESS","UPDATE_TESTINFO_FAILURE","setUpdateTestinfoAction","changeUpdateFieldAction","updateTestinfoAction","updateTestInfoSaga","TestInfoListPage","TestScoreListComponent","TestScoreListPage","scoreSaga","changeDetails","UPDATE_SCORE","UPDATE_SCORE_SUCCESS","UPDATE_SCORE_FAILURE","update","updateSaga","READ_SCORE","READ_SCORE_SUCCESS","READ_SCORE_FAILURE","READ_PREV_SCORE","READ_PREV_SCORE_SUCCESS","READ_PREV_SCORE_FAILURE","readScore","unloadScore","readScoreSaga","scoreId","path","readPrevScore","readPrevScoreSaga","scoreReceived","doneCount","ScoreCriteriaItem","detail","onChangeItem","inputRef","toggleValue","checked","changeDetail","correct","ScoreComponentBlock","QuestionWrapper","TitleBlock","ScoreStateBlock","h3","done","CriteriaWrapper","EmptyScoreBlock","StatusBlock","NavigationButtonsBlock","NaviButton","SubmitButton","LocalNavBar","BreadCrumb","BreadCrumbItem","BreadCrumbHomeItem","BreadCrumbItemSeperator","ProgressDiv","ScoreComponent","liveDoneCount","onChangeDetails","onMoveNextScore","onMovePrevScore","onMoveListScore","xOffset","yOffset","onLeaveToNextModal","setOnLeaveToNextModal","onLeaveToPrevModal","setOnLeaveToPrevModal","onMoveDismiss","_details","testPaperNo","scoreMyListPath","scoredListPath","correctPoint","getCurrentPoint","onClose","images","alt","alert","ScorePage","scoreListSaga","scores","LIST_SCORE","LIST_SCORE_SUCCESS","LIST_SCORE_FAILURE","listScores","listScoreSaga","notProcessedCount","processCount","ScoreListWrapper","QuestionNoBlock","TestNameBlock","QuestionStateBlock","ScoredItemBlock","process","before","ScoreItemComponent","onReadScoreData","linkPath","getStateString","getCriteriaStrings","ScoredListComponent","strCount","scrollTo","PaginationBlock","PaginationBlockLarge","PageButton","buildLink","queryobj","query","pushItem","disabled","Pagination","pageItems","i","startIndex_","startIndex","endIndex_","endIndex","ScoredListPage","ScoreEditPage","MenuWrapper","MenuItem","StartAdminPageComponent","StartPageComponent","StartPageContainer","StartPage","DescBlock","CheckBoxBlock","QuestionScoreBlock","DetailsBlock","DetailItemBlock","ScorerEditItemComponent","selectedScorer","onCheckedChange","length","some","TestInfoSelect","ScorerNameBlock","ScorerManageComponent","onTestNameChange","onScorerInfoChange","onUpdateCriteriaList","onInitializeCriteriaList","criteriasResult","setSelectedScorer","scorerList","setScorerList","selectValue","setSelectValue","updateCompleteModal","setUpdateCompleteModal","fetchScorerList","scorers","sort","b","onScorerNameClick","scorerId","scorerName","innerHTML","newCriterias","newChangedCriterias","findIndex","splice","scorer","info","ScorerManagePage","ScoreMyCriteriaItemComponent","stat","statStr","statItem","total","ScoreMyCriteriaComponent","statSaga","LIST_STAT","LIST_STAT_SUCCESS","LIST_STAT_FAILURE","TESTINFO_STAT","TESTINFO_STAT_SUCCESS","TESTINFO_STAT_FAILURE","listStat","questionNos","listStatSaga","testInfoStat","testInfoStatSaga","ScoreMyListPage","ScoreResultListComponent","ScoreResultListPage","exportSaga","EXPORT_EXCEL","EXPORT_EXCEL_SUCCESS","EXPORT_EXCEL_FAILURE","unloadFileInfo","exportExcel","exportExcelSaga","initialExportExcel","fileName","export_excel","ScorerResultComponentBlock","ScoreResultComponent","onExportClicked","exportFileName","download","marginLeft","ScoreResultPage","App","component","exact","Boolean","hostname","rootSaga","all","rootReducer","combineReducers","dotenv","config","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","getItem","loadUser","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4f537fc.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst ResponsiveBlock = styled.div`\n  padding-left: 1rem;\n  padding-right: 1rem;\n  width: 1024px;\n  margin: 0 auto; /* 중앙 정렬 */\n\n  /* 브라우저 크기에 따라 가로 사이즈 변경 */\n  @media (max-width: 1024px) {\n    width: 768px;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Responsive = ({ children, ...rest }) => {\n  // style, className, onClick, onMouseMove 등의 props를 사용할 수 있도록\n  // ...rest를 사용하여 ResponsiveBlock에게 전달\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\n};\n\nexport default Responsive;\n","// source: https://yeun.github.io/open-color/\nconst palette = {\n  gray: [\n    '#f8f9fa',\n    '#f1f3f5',\n    '#e9ecef',\n    '#dee2e6',\n    '#ced4da',\n    '#adb5bd',\n    '#868e96',\n    '#495057',\n    '#343a40',\n    '#212529',\n  ],\n  cyan: [\n    '#e3fafc',\n    '#c5f6fa',\n    '#99e9f2',\n    '#66d9e8',\n    '#3bc9db',\n    '#22b8cf',\n    '#15aabf',\n    '#1098ad',\n    '#0c8599',\n    '#0b7285',\n  ],\n};\n\nexport default palette;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/styles/palette';\n\nconst buttonStyle = css`\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  color: white;\n  outline: none;\n  text-align: center;\n  cursor: pointer;\n\n  background: ${palette.gray[8]};\n  &:hover {\n    background: ${palette.gray[6]};\n  }\n\n  ${props =>\n    props.fullWidth &&\n    css`\n      padding-top: 0.75rem;\n      padding-bottom: 0.75rem;\n      width: 100%;\n      font-size: 1.125rem;\n    `}\n\n    ${props =>\n      props.big &&\n      css`\n        padding: 1rem;\n      `}\n\n  ${props =>\n    props.cyan &&\n    css`\n      background: ${palette.cyan[5]};\n      &:hover {\n        background: ${palette.cyan[4]};\n      }\n    `}\n\n    &:disabled {\n    background: ${palette.gray[3]};\n    color: ${palette.gray[5]};\n    cursor: not-allowed;\n  }\n`;\n\nconst StyledButton = styled.button`\n  ${buttonStyle}\n`;\n\nconst StyledLink = styled(Link)`\n  ${buttonStyle}\n`;\n\nconst Button = props => {\n  return props.to ? (\n    <StyledLink {...props} cyan={props.cyan ? 1 : 0} big={props.big ? 1 : 0} />\n  ) : (\n    <StyledButton {...props} />\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Responsive from './Responsive';\nimport Button from './Button';\n\nconst HeaderBlock = styled.div`\n  position: fixed;\n  width: 100%;\n  background: white;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.08);\n`;\n\n/**\n * Responsive 컴포넌트의 속성에 스타일을 추가해서 새로운 컴포넌트 생성\n */\nconst Wrapper = styled(Responsive)`\n  height: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between; /* 자식 엘리먼트 사이에 여백을 최대로 설정 */\n  .logo {\n    font-size: 1.125rem;\n    font-weight: 800;\n    letter-spacing: 2px;\n  }\n  .right {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nconst HeadWrapper = styled.div`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\n/**\n * 헤더가 fixed로 되어 있기 때문에 페이지의 컨텐츠가 4rem 아래 나타나도록 해주는 컴포넌트\n */\nconst Spacer = styled.div`\n  height: 4rem;\n`;\n\nconst UserInfo = styled.div`\n  font-weight: 800;\n  margin-right: 1rem;\n`;\n\nconst Header = ({ user, onLogout, onHeadClick }) => {\n  return (\n    <>\n      <HeaderBlock>\n        <Wrapper>\n          {/* <Link to=\"/\" className=\"logo\">\n            채점관리 시스템\n          </Link> */}\n          <HeadWrapper className=\"logo\" onClick={onHeadClick}>\n            채점관리 시스템\n          </HeadWrapper>\n          {user ? (\n            <div className=\"right\">\n              <UserInfo>{user.username}</UserInfo>\n              <Button onClick={onLogout}>로그아웃</Button>\n            </div>\n          ) : (\n            <div className=\"right\">\n              <Button to=\"/login\">로그인</Button>\n            </div>\n          )}\n        </Wrapper>\n      </HeaderBlock>\n      <Spacer />\n    </>\n  );\n};\n\nexport default Header;\n","import axios from 'axios';\n\nconst client = axios.create();\n\nexport default client;\n","import client from './client';\n\n// 로그인\nexport const login = ({ username, password }) =>\n  client.post('/api/auth/login', { username, password });\n\n// 회원가입\nexport const register = ({ username, password }) =>\n  client.post('/api/auth/register', { username, password });\n\n// 로그인 상태 확인\nexport const check = () => client.get('/api/auth/check');\n\n// 로그 아웃\nexport const logout = () => client.post('/api/auth/logout');\n\n// 채점자 리스트\nexport const list = () => client.get('/api/auth/list');\n","import { createAction, handleActions } from 'redux-actions';\n\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n\n/*\n 요청을 위한 액션 타입을 payload로 설정합니다 (예: \"sample/GET_POST\")\n*/\n\nexport const startLoading = createAction(\n  START_LOADING,\n  requestType => requestType,\n);\n\nexport const finishLoading = createAction(\n  FINISH_LOADING,\n  requestType => requestType,\n);\n\nconst initialState = {};\n\nconst loading = handleActions(\n  {\n    [START_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: true,\n    }),\n    [FINISH_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: false,\n    }),\n  },\n  initialState,\n);\n\nexport default loading;\n","import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\n\nexport const createRequestActionTypes = type => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\n\n// export default function createRequestSaga(type, request) {\n//   const SUCCESS = `${type}_SUCCESS`;\n//   const FAILURE = `${type}_FAILURE`;\n\n//   return function*(action) {\n//     yield put(startLoading(type)); // 로딩 시작\n//     try {\n//       const response = yield call(request, action.payload);\n//       yield put({\n//         type: SUCCESS,\n//         payload: response.data,\n//         meta: response,\n//       });\n//     } catch (e) {\n//       yield put({\n//         type: FAILURE,\n//         payload: e,\n//         error: true,\n//       });\n//     }\n//     yield put(finishLoading(type)); // 로딩 끝\n//   };\n// }\n\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  return function*(action) {\n    yield put(startLoading(type)); // 로딩 시작\n    try {\n      const response = yield call(request, action.payload);\n      if (response && response.data) {\n        yield put({\n          type: SUCCESS,\n          payload: response.data,\n          meta: response,\n        });\n      } else {\n        yield put({\n          type: FAILURE,\n          payload: 'reponse is empty',\n          error: true,\n        });\n      }\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true,\n      });\n    }\n    yield put(finishLoading(type)); // 로딩 끝\n  };\n}\n","import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest, call } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\n\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\n// 회원 정보 확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\n  'user/CHECK',\n);\nconst LOGOUT = 'user/LOGOUT';\n\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\n\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\nfunction checkFailureSaga() {\n  try {\n    localStorage.removeItem('user');\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nexport function* logoutSaga() {\n  try {\n    yield call(authAPI.logout);\n    localStorage.removeItem('user');\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n  yield takeLatest(LOGOUT, logoutSaga);\n}\n\nconst initialState = {\n  user: null,\n  admin: false,\n  checkError: null,\n};\n\nexport default handleActions(\n  {\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\n      ...state,\n      user,\n    }),\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\n      ...state,\n      user,\n      checkError: null,\n    }),\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      user: null,\n      checkError: error,\n    }),\n    [LOGOUT]: state => ({\n      ...state,\n      user: null,\n    }),\n  },\n  initialState,\n);\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Header from '../../components/common/Header';\nimport { logout } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\n\nconst HeaderContainer = ({ history }) => {\n  const { user, score } = useSelector(({ user, score }) => ({\n    user: user.user,\n    score: score.score,\n  }));\n  const dispatch = useDispatch();\n  const onLogout = () => {\n    dispatch(logout());\n    history.push('/');\n  };\n  useEffect(() => {\n    if (!user) {\n      history.push('/login');\n    }\n  }, []);\n\n  const onHeadClick = () => {\n    history.push('/');\n  };\n  return <Header user={user} onLogout={onLogout} onHeadClick={onHeadClick} />;\n};\n\nexport default withRouter(HeaderContainer);\n","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\n\nconst CriteriasBlock = styled.div`\n  margin-top: 0.5rem;\n  .criteria {\n    /* display: inline-block; */\n    color: ${palette.cyan[7]};\n    text-decoration: none;\n    margin-left: 0.5rem;\n    &:hover {\n      color: ${palette.cyan[6]};\n    }\n  }\n`;\n\nconst Criterias = ({ criterias }) => {\n  return (\n    <CriteriasBlock>\n      {criterias.map((criteria, index) => (\n        <div key={index} className=\"criteria\">\n          {criteria.text}\n        </div>\n      ))}\n    </CriteriasBlock>\n  );\n};\n\nexport default Criterias;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from './Button';\nimport Loader from 'react-loader-spinner';\n\nconst FullScreen = styled.div`\n  position: fixed;\n  z-index: 30;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.25);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst AskModalBlock = styled.div`\n  width: 320px;\n  background: white;\n  padding: 1.5rem;\n  border-radius: 4px;\n  box-shadow: 0px 0px 8px solid(0, 0, 0, 0.125);\n  h2 {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n  p {\n    margin-bottom: 3rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  height: 2rem;\n  & + & {\n    margin-left: 0.75rem;\n  }\n`;\n\nconst AskModal = ({\n  visible,\n  title,\n  description,\n  confirmText = '확인',\n  cancelText = '취소',\n  onConfirm,\n  onCancel,\n  showCancel = true,\n  showProgressbar = false,\n}) => {\n  if (!visible) return null;\n\n  return (\n    <FullScreen>\n      <AskModalBlock>\n        <h2>{title}</h2>\n        <p>{description}</p>\n        {showProgressbar && (\n          <Loader type=\"TailSpin\" color=\"#00BFFF\" height={100} width={100} />\n        )}\n\n        <div className=\"buttons\">\n          {showCancel && (\n            <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\n          )}\n          <StyledButton onClick={onConfirm} cyan>\n            {confirmText}\n          </StyledButton>\n        </div>\n      </AskModalBlock>\n    </FullScreen>\n  );\n};\n\nexport default AskModal;\n","import React from 'react';\nimport AskModal from '../common/AskModal';\n\nconst AskRemoveModal = ({ visible, onConfirm, onCancel }) => {\n  return (\n    <AskModal\n      visible={visible}\n      title=\"채점기준 삭제\"\n      description=\"채점기준을 정말 삭제하시겠습니까?\"\n      confirmText=\"삭제\"\n      onConfirm={onConfirm}\n      onCancel={onCancel}\n    />\n  );\n};\n\nexport default AskRemoveModal;\n","import React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport AskRemoveModal from '../criterias/AskRemoveModal';\n\nconst CriteriaReadActionButtonsBlock = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 2rem;\n  margin-top: -1.5rem;\n`;\n\nconst ActionButton = styled.button`\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  color: ${palette.gray[6]};\n  font-weight: bold;\n  border: none;\n  outline: none;\n  font-size: 0.875rem;\n  cursor: pointer;\n  &:hover {\n    background: ${palette.gray[1]};\n    color: ${palette.cyan[7]};\n  }\n  & + & {\n    margin-left: 0.25rem;\n  }\n`;\n\nconst CriteriaReadActionButtons = ({ onRemove }) => {\n  const [modal, setModal] = useState(false);\n  const onRemoveClick = () => {\n    setModal(true);\n  };\n  const onCancel = () => {\n    setModal(false);\n  };\n  const onConfirm = () => {\n    setModal(false);\n    onRemove();\n  };\n  return (\n    <>\n      <CriteriaReadActionButtonsBlock>\n        <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\n      </CriteriaReadActionButtonsBlock>\n      <AskRemoveModal\n        visible={modal}\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n      />\n    </>\n  );\n};\n\nexport default CriteriaReadActionButtons;\n","import qs from 'qs';\nimport client from './client';\n\nexport const writeCriteria = ({ question, details }) => {\n  return client.post('/api/criteria', { question, details });\n};\n\nexport const readCriteria = id => {\n  client.get(`/api/criteria/${id}`);\n};\n\nexport const listCriteria = ({\n  page,\n  testName,\n  testinfoId,\n  userId,\n  scoreAuth,\n}) => {\n  const queryString = qs.stringify({\n    page,\n    testinfoId,\n    testName,\n    userId,\n    scoreAuth,\n  });\n  //console.log(\"queryString\", queryString);\n  return client.get(`/api/criteria?${queryString}`);\n};\n\nexport const updateCriteria = ({ criteriaId, question, details }) => {\n  return client\n    .patch(`/api/criteria/${criteriaId}`, {\n      question,\n      details,\n    })\n    .catch(error => {\n      console.log('update check', error);\n    });\n};\n\nexport const removeCriteria = id => client.delete(`/api/criteria/${id}`);\n\nexport const updateCriterias = async ({ criterias, changedCriterias }) => {\n  console.log('changedCriterias', changedCriterias);\n  const obj = await client.patch('/api/criteria', { changedCriterias });\n  //console.log('api updateCriterias', obj);\n  return obj;\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/styles/palette';\nimport Criterias from '../common/Criterias';\nimport { Link } from 'react-router-dom';\nimport CriteriaReadActionButtons from '../criteria/CriteriaReadActionButtons';\nimport { removeCriteria } from '../../lib/api/criteria';\n\nconst CriteriaListBlock = styled(Responsive)`\n  margin-top: 1rem;\n`;\n\nconst WriteCriteriaButtonWrapper = styled.div`\n  margin-top: 3rem;\n  margin-bottom: 3rem;\n`;\n\nconst CriteriaItemBlock = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  /* border-top: 1px solid ${palette.gray[2]}; */\n  /* 맨 위 item 에는 padding-top 없음 */\n  &:first-child {\n    padding-top: 0;\n  }\n  /* & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  } */\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n  p {\n    margin-top: 2rem;\n  }\n  &:hover {\n    background: ${palette.gray[1]};\n  }\n`;\n\nconst CriteriaItem = ({\n  criteria,\n  onReload,\n  onTempChangeField,\n  showWriteButton,\n}) => {\n  const { question, details, _id } = criteria;\n  const onRemove = async () => {\n    try {\n      await removeCriteria(_id);\n      onReload();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const onTempClick = () => {\n    /**\n     *  todo : 서버에서 read 하는쪽에서 데이터를 읽어오지 못해서(json 으로 리턴받는거 까지는 되는데 redux 에서 못 받아오는게 아닐까-_-;)\n     * 여기서 h2 클릭했을때 해당 criteria 정보를 store 의 criteria 정보로 set\n     * */\n    onTempChangeField({ criteria });\n  };\n  return (\n    <>\n      <Link to={`/readCriteria/${_id}`}>\n        <CriteriaItemBlock onClick={onTempClick}>\n          <h2>{question.no}</h2>\n\n          <Criterias criterias={details} />\n        </CriteriaItemBlock>\n      </Link>\n      {showWriteButton && <CriteriaReadActionButtons onRemove={onRemove} />}\n    </>\n  );\n};\n\nconst CriteriaList = ({\n  testinfoId,\n  criterias,\n  loading,\n  error,\n  showWriteButton,\n  onReload,\n  onTempChangeField,\n}) => {\n  // 에러 발생시\n  if (error) {\n    return <CriteriaListBlock>에러가 발생했습니다.</CriteriaListBlock>;\n  }\n\n  const writeLink = `/writeCriteria/${testinfoId}`;\n  return (\n    <>\n    \n      <CriteriaListBlock>\n        <WriteCriteriaButtonWrapper>\n          {showWriteButton && (\n            <Button cyan big to={writeLink}>\n              새 채점 기준 작성하기\n            </Button>\n          )}\n        </WriteCriteriaButtonWrapper>  \n        {/* 로딩중이 아니고 채점기준 내용이 존재할때만 보여줌 */}\n        {!loading && criterias && (\n          <>\n            <div>\n              {criterias.map(criteria => (\n                <CriteriaItem\n                  criteria={criteria}\n                  key={criteria._id}\n                  onReload={onReload}\n                  onTempChangeField={onTempChangeField}\n                  showWriteButton={showWriteButton}\n                />\n              ))}\n            </div>\n          </>\n        )}\n      </CriteriaListBlock>\n    </>\n  );\n};\n\nexport default CriteriaList;\n","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as criteriaAPI from '../lib/api/criteria';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst INITIALIZE_LIST = 'criteria/INITIALIZE_LIST';\nexport const initializeList = createAction(INITIALIZE_LIST);\n\nconst CHANGE_CRITERIAS = 'criteria/CHANGE_CRITERIAS';\nexport const changeCriterias = createAction(\n  CHANGE_CRITERIAS,\n  ({ criterias, changedCriterias }) => ({\n    criterias,\n    changedCriterias,\n  }),\n);\n\nconst [\n  LIST_CRITERIA,\n  LIST_CRITERIA_SUCCESS,\n  LIST_CRITERIA_FAILURE,\n] = createRequestActionTypes('criteria/LIST_CRITERIA');\n\nexport const listCriteria = createAction(\n  LIST_CRITERIA,\n  ({ testinfoId, testName, page, userId, scoreAuth, questionNo }) => ({\n    testinfoId,\n    testName,\n    page,\n    userId,\n    scoreAuth,\n    questionNo,\n  }),\n);\n\nconst listCriteriaSaga = createRequestSaga(\n  LIST_CRITERIA,\n  criteriaAPI.listCriteria,\n);\n\nconst [\n  UPDATE_CRITERIAS,\n  UPDATE_CRITERIAS_SUCCESS,\n  UPDATE_CRITERIAS_FAILURE,\n] = createRequestActionTypes('criteria/UPDATE_CRITERIAS');\n\nexport const updateCriterias = createAction(\n  UPDATE_CRITERIAS,\n  ({ criterias, changedCriterias }) => ({ criterias, changedCriterias }),\n);\n\nconst updateCriteriasSaga = createRequestSaga(\n  UPDATE_CRITERIAS,\n  criteriaAPI.updateCriterias,\n);\n\nexport function* criteriasSage() {\n  yield takeLatest(LIST_CRITERIA, listCriteriaSaga);\n  yield takeLatest(UPDATE_CRITERIAS, updateCriteriasSaga);\n}\n\nconst initialState = {\n  criterias: null,\n  changedCriterias: null,\n  result: null,\n  error: null,\n  lastPage: 1,\n};\n\nconst criterias = handleActions(\n  {\n    [INITIALIZE_LIST]: state => initialState,\n    [LIST_CRITERIA_SUCCESS]: (\n      state,\n      { payload: criterias, meta: response },\n    ) => ({\n      ...state,\n      criterias,\n      lastPage: parseInt(response.headers['last-page'], 10),\n    }),\n    [LIST_CRITERIA_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n    [CHANGE_CRITERIAS]: (state, { payload: criterias }) => ({\n      ...state,\n      criterias: criterias.criterias,\n      changedCriterias: criterias.changedCriterias,\n    }),\n    [UPDATE_CRITERIAS_SUCCESS]: (state, { payload: result }) => ({\n      ...state,\n      result,\n    }),\n    [UPDATE_CRITERIAS_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n  },\n  initialState,\n);\n\nexport default criterias;\n","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as criteriaAPI from '../lib/api/criteria';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst INITIALIZE = 'criteria/INITIALIZE'; // 모든 내용 초기화\nconst SET_CRITERIA = 'criteria/SET_CRITERIA';\nconst CHANGE_FILED = 'criteria/CHANGE_FILED'; // 특정 key 값 바꾸기\nconst CHANGE_QUESTION = 'criteria/CHANGE_QUESTION';\n\nconst [\n  UPDATE_CRITERIA,\n  UPDATE_CRITERIA_SUCCESS,\n  UPDATE_CRITERIA_FAILURE,\n] = createRequestActionTypes('criteria/UPDATE_CRITERIA');\n\nexport const updateCriteria = createAction(\n  UPDATE_CRITERIA,\n  ({ criteriaId, question, details }) => ({\n    criteriaId,\n    question,\n    details,\n  }),\n);\n\nconst updateCriteriaSaga = createRequestSaga(\n  UPDATE_CRITERIA,\n  criteriaAPI.updateCriteria,\n);\n\nconst [\n  WRITE_CRITERIA,\n  WRITE_CRITERIA_SUCCESS,\n  WRITE_CRITERIA_FAILURE,\n] = createRequestActionTypes('criteria/WRITE_CRITERIA'); // 채점기준 작성\n\nexport const initialize = createAction(INITIALIZE);\nexport const setCriteria = createAction(SET_CRITERIA, ({ criteria }) => ({\n  criteria,\n}));\nexport const changeField = createAction(CHANGE_FILED, ({ key, value }) => ({\n  key,\n  value,\n}));\nexport const changeQuestionAction = createAction(\n  CHANGE_QUESTION,\n  ({ key, value }) => ({\n    key,\n    value,\n  }),\n);\nexport const writeCriteriaAction = createAction(\n  WRITE_CRITERIA,\n  ({ question, details }) => ({\n    question,\n    details,\n  }),\n);\n\nconst writeCriteriaRequestSaga = createRequestSaga(\n  WRITE_CRITERIA,\n  criteriaAPI.writeCriteria,\n);\nexport function* writeCriteriaSaga() {\n  yield takeLatest(WRITE_CRITERIA, writeCriteriaRequestSaga);\n  yield takeLatest(UPDATE_CRITERIA, updateCriteriaSaga);\n}\n\nconst [\n  READ_CRITERIA,\n  READ_CRITERIA_SUCCESS,\n  READ_CRITERIA_FAILURE,\n] = createRequestActionTypes('criteria/READ_CRITERIA');\n\nconst UNLOAD_CRITERIA = 'criteria/UNLOAD_CRITERIA'; // 페이지 벗어날 때 데이터 비우기\n\nexport const readCriteriaAction = createAction(READ_CRITERIA, id => id);\nexport const unloadCriteriaAction = createAction(UNLOAD_CRITERIA);\n\nconst readCriteriaRequestSaga = createRequestSaga(\n  READ_CRITERIA,\n  criteriaAPI.readCriteria,\n);\nexport function* readCriteriaSaga() {\n  yield takeLatest(READ_CRITERIA, readCriteriaRequestSaga);\n}\n\nconst initialState = {\n  question: {\n    no: 0,\n    score: 0,\n    testinfoId: '',\n    testName: '',\n    area: {\n      xPox: 0,\n      yPos: 0,\n      width: 0,\n      height: 0,\n      imgFileName: '',\n    },\n  },\n  details: [],\n  criteriaReceived: null,\n  criteriaError: null,\n};\n\nconst criteria = handleActions(\n  {\n    [INITIALIZE]: state => initialState,\n    [SET_CRITERIA]: (state, { payload: { criteria } }) => ({\n      ...criteria,\n    }),\n    [CHANGE_FILED]: (state, { payload: { key, value } }) => ({\n      ...state,\n      [key]: value,\n    }),\n    [CHANGE_QUESTION]: (state, { payload: { key, value } }) => ({\n      ...state,\n      question: {\n        ...state.question,\n        [key]: value,\n      },\n    }),\n    [UPDATE_CRITERIA]: state => ({\n      ...state,\n      criteriaReceived: null,\n      criteriaError: null,\n    }),\n    [UPDATE_CRITERIA_SUCCESS]: (state, { payload: criteriaReceived }) => ({\n      ...state,\n      criteriaReceived,\n    }),\n    [UPDATE_CRITERIA_FAILURE]: (state, { payload: criteriaError }) => ({\n      ...state,\n      criteriaError,\n    }),\n    [WRITE_CRITERIA]: state => ({\n      ...state,\n      criteriaReceived: null,\n      criteriaError: null,\n    }),\n    [WRITE_CRITERIA_SUCCESS]: (state, { payload: criteriaReceived }) => ({\n      ...state,\n      criteriaReceived,\n    }),\n    [WRITE_CRITERIA_FAILURE]: (state, { payload: criteriaError }) => ({\n      ...state,\n      criteriaError,\n    }),\n    [READ_CRITERIA_SUCCESS]: (state, { payload: criteriaReceived }) => ({\n      ...state,\n      criteriaReceived,\n    }),\n    [READ_CRITERIA_FAILURE]: (state, { payload: criteriaError }) => ({\n      ...state,\n      criteriaError,\n    }),\n    [UNLOAD_CRITERIA]: () => initialState,\n  },\n  initialState,\n);\nexport default criteria;\n","import React, { useEffect, useCallback } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CriteriaList from '../../components/criterias/CriteriaList';\nimport { listCriteria, initializeList } from '../../modules/criterias';\nimport { setCriteria } from '../../modules/criteria';\n\nconst CriteriaListContainer = ({ location, match }) => {\n  const { testinfoId } = match.params;\n  const dispatch = useDispatch();\n  const { criterias, error, loading, user } = useSelector(\n    ({ criterias, loading, user }) => ({\n      criterias: criterias.criterias,\n      error: criterias.error,\n      loading: loading['criterias/LIST_CRITERIA'],\n      user: user.user,\n    }),\n  );\n  useEffect(() => {\n    const { page } = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n    dispatch(listCriteria({ testinfoId, page }));\n    return () => {\n      console.log('initilaize list');\n      dispatch(initializeList());\n    };\n  }, [location.search]); // dispatch\n\n  const onReload = () => {\n    window.location.reload(true);\n  };\n\n  const onTempChangeField = useCallback(\n    payload => dispatch(setCriteria(payload)),\n    [dispatch],\n  );\n\n  return (\n    <CriteriaList\n      testinfoId={testinfoId}\n      loading={loading}\n      error={error}\n      criterias={criterias}\n      showWriteButton={user}\n      onReload={onReload}\n      onTempChangeField={onTempChangeField}\n    />\n  );\n};\n\nexport default withRouter(CriteriaListContainer);\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport CriteriaListContainer from '../containers/criterias/CriteriaListContainer';\n\nconst CriteriaListPage = () => {\n  return (\n    <div>\n      <HeaderContainer />\n      <CriteriaListContainer />\n    </div>\n  );\n};\n\nexport default CriteriaListPage;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/styles/palette';\n\nconst SubInfoBlock = styled.div`\n  ${props =>\n    props.hasMarginTop &&\n    css`\n      margin-top: 1rem;\n    `}\n    color:${palette.gray[6]}\n\n    /* span 사이에 가운뎃점 문자 보여주기 */\n    span+span:before{\n        color:${palette.gray[4]};\n        padding-left:0.25rem;\n        padding-right:0.25rem;\n        content:'\\\\B7' /* 가운뎃점 문자 */\n    }\n`;\n\nconst SubInfo = ({ username, publishedDate, hasMarginTop }) => {\n  return (\n    <SubInfoBlock hasMarginTop={hasMarginTop}>\n      <span>\n        <b>\n          <Link to={`/@{username}`}>{username}</Link>\n        </b>\n      </span>\n      <span>{new Date(publishedDate).toLocaleDateString()}</span>\n    </SubInfoBlock>\n  );\n};\n\nexport default SubInfo;\n","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Responsive from '../common/Responsive';\nimport SubInfo from '../common/SubInfo';\nimport Criterias from '../common/Criterias';\n\nconst CriteriaViewerBlock = styled(Responsive)`\n  margin-top: 4rem;\n`;\nconst CriteriaHead = styled.div`\n  border-bottom: 1px solid ${palette.gray[2]};\n  padding-bottom: 3rem;\n  margin-bottom: 3rem;\n  h1 {\n    font-size: 3rem;\n    line-height: 1.5;\n    margin: 0;\n  }\n`;\n\nconst CriteriaViewer = ({ criteria, error, loading }) => {\n  /**\n   * 오류 발생시\n   */\n  if (error) {\n    if (error.respose && error.respose.state === 404) {\n      return (\n        <CriteriaViewerBlock>\n          해당 채점 기준 내용이 존재하지 않습니다.\n        </CriteriaViewerBlock>\n      );\n    } else {\n      console.log('error: ', error);\n      return <CriteriaViewerBlock>오류 발생!!</CriteriaViewerBlock>;\n    }\n  }\n\n  console.log('loading: ', loading);\n  console.log('criteria: ', criteria);\n\n  /**\n   * 로딩 중이거나 아직 채점기준 데이터가 없을때\n   */\n  if (loading || !criteria) {\n    return null;\n  }\n\n  const { question, user, publishedDate, details } = criteria;\n  return (\n    <>\n      <CriteriaViewerBlock>\n        <CriteriaHead>\n          <h1>{question.no}</h1>\n          <SubInfo>\n            <span>\n              <b>{user.username}</b>\n            </span>\n            <span>{new Date(publishedDate).toLocaleDateString()}</span>\n          </SubInfo>\n          {/* <Criterias>\n            {details.map((detail, index) => (\n              <div key={index} className=\"criteria\">\n                {detail}\n              </div>\n            ))}\n          </Criterias> */}\n          <Criterias criterias={details} />\n        </CriteriaHead>\n      </CriteriaViewerBlock>\n    </>\n  );\n};\n\nexport default CriteriaViewer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  readCriteriaAction,\n  unloadCriteriaAction,\n} from '../../modules/criteria';\nimport CriteriaViewer from '../../components/criteria/CriteriaViewer';\n\nconst CriteriaViewerContainer = ({ match }) => {\n  // 처음 마운트 될때 읽기 요청 api 호출\n  const { criteriaId } = match.params;\n  const dispatch = useDispatch();\n  // const { criteria, error, loading } = useSelector(({ criteria, loading }) => ({\n  //   criteria: criteria.criteria,\n  //   error: criteria.error,\n  //   loading: loading['criteria/READ_CRITERIA'],\n  // }));\n  const { criteria, error, loading } = useSelector(state => {\n    return {\n      criteria: state.criteria.criteriaReceived,\n      error: state.criteria.criteriaError,\n      loading: state.loading['criteria/READ_CRITERIA'],\n    };\n  });\n\n  useEffect(() => {\n    dispatch(readCriteriaAction(criteriaId));\n\n    return () => {\n      // 언마운트 될때 리덕스에서 데이터 없애기\n      dispatch(unloadCriteriaAction());\n    };\n  }, [dispatch, criteriaId]);\n\n  return <CriteriaViewer criteria={criteria} loading={loading} error={error} />;\n};\n\nexport default withRouter(CriteriaViewerContainer);\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport CriteriaViewerContainer from '../containers/criteria/CriteriaViewerContainer';\n\nconst CriteriaPage = () => {\n  return (\n    <>\n      <HeaderContainer />\n      <CriteriaViewerContainer />\n    </>\n  );\n};\n\nexport default CriteriaPage;\n","import React, { useState, useRef, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport Button from '../common/Button';\nimport palette from '../../lib/styles/palette';\nimport { MdZoomIn, MdZoomOut } from 'react-icons/md';\n\nconst FullScreen = styled.div`\n  position: fixed;\n  z-index: 30;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.25);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Container = styled.div`\n  width: 90%;\n  height: 90%;\n  display: flex;\n  background: ${palette.gray[1]};\n  overflow: none;\n`;\nconst Nav = styled.div`\n  overflow: scroll;\n  width: 240px;\n  background: ${palette.gray[2]};\n`;\nconst Section = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst ButtonWrapperBlock = styled.div`\n  margin: 1rem;\n`;\nconst ButtonHolder = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  height: 2rem;\n`;\n\nconst StyledButton = styled(Button)`\n  height: 2rem;\n  & + & {\n    margin-left: 0.75rem;\n  }\n`;\n\nconst FileNameBlock = styled.div`\n  padding: 1rem;\n  border-top: 1px solid #dee2e6;\n  &:hover {\n    cursor: pointer;\n    background: ${palette.cyan[1]};\n  }\n  ${props =>\n    props.active &&\n    css`\n      background: ${palette.cyan[5]};\n    `}\n`;\n\nconst AreaWrapper = styled.div`\n  position: relative;\n  overflow: auto;\n  min-height: 4rem;\n`;\nconst ImgWrapper = styled.div`\n  position: relative;\n  overflow: auto;\n`;\n\nconst ZoomButtonWrapper = styled.div`\n  left: 0;\n  top: 0;\n`;\nconst ZoomButton = styled(StyledButton)`\n  font-size: 1.75rem;\n  margin: 0.25rem;\n`;\nconst AnswerArea = styled.div`\n  position: absolute;\n  z-index: 99;\n`;\n\nconst AskAnswerAreaModal = ({\n  visible,\n  testName,\n  area,\n  fileNames,\n  onConfirm,\n  onCancel,\n  onChangeField,\n}) => {\n  const [selectedFileName, setSelectedFileName] = useState('');\n  const [zoomRatio, setZoomRatio] = useState(1.0);\n  const [drag, setDrag] = useState(false);\n  const [xPos, setXPos] = useState(area.xPos);\n  const [yPos, setYPos] = useState(area.yPos);\n  const [width, setWidth] = useState(area.width);\n  const [height, setHeight] = useState(area.height);\n\n  useEffect(() => {\n    const initFileName = area.imgFileName ? area.imgFileName : fileNames[0];\n    setSelectedFileName(initFileName);\n    area.imgFileName = initFileName;\n    setZoomRatio(1.0 / 1.5 / 1.5);\n  }, [fileNames]);\n\n  const ImgOriginX = useRef(0);\n  const [scrollXOffset, setScrollXOffset] = useState(0);\n  const imgEl = useRef(null);\n\n  if (!visible) return null;\n\n  const onModalConfirm = () => {\n    if (\n      selectedFileName !== '' &&\n      xPos !== 0 &&\n      yPos !== 0 &&\n      width !== 0 &&\n      height !== 0\n    ) {\n      const area = {\n        imgFileName: selectedFileName,\n        xPos: xPos,\n        yPos: yPos,\n        width: width,\n        height: height,\n      };\n      onChangeField({ key: 'area', value: area });\n    }\n    onConfirm();\n  };\n\n  const onItemClick = e => {\n    const clickedFileName = e.target.getAttribute('name');\n    initArea();\n    area.imgFileName = clickedFileName;\n    setSelectedFileName(clickedFileName);\n  };\n\n  const onZoomInClicked = () => {\n    setZoomRatio(zoomRatio * 1.5);\n  };\n  const onZoomOutClicked = () => {\n    setZoomRatio(zoomRatio / 1.5);\n  };\n  const initArea = () => {\n    setXPos(0);\n    setYPos(0);\n    setWidth(0);\n    setHeight(0);\n\n    setDrag(false);\n  };\n  const onMouseDown = e => {\n    e.preventDefault();\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    initArea();\n    setDrag(true);\n    setXPos(offsetX);\n    setYPos(offsetY);\n  };\n  const onMouseMove = e => {\n    e.preventDefault();\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    if (drag) {\n      const newWidth = offsetX - xPos;\n      if(newWidth > 0){\n        if(newWidth - width > 0){ // 늘어날때 \n          setWidth(newWidth);\n        }\n      }\n      const newHeight = offsetY - yPos;\n      if(newHeight > 0){\n        if(newHeight - height > 0){ // 늘어날때 \n          setHeight(newHeight);\n        }\n      }\n    }\n  };\n\n  const onMouseUp = e => {\n    e.preventDefault();\n    setDrag(false);\n  };\n\n  const onImageScroll = () => {\n    const x = imgEl.current.getBoundingClientRect().x;\n    const diff = ImgOriginX.current - x;\n    setScrollXOffset(diff);\n  };\n\n  const onImageLoad = () => {\n    const x = imgEl.current.getBoundingClientRect().x;\n    ImgOriginX.current = x;\n  };\n\n  const styles = {\n    transformOrigin: `0 0`,\n    transform: `scale(${zoomRatio})`,\n  };\n\n  const answerAreaStyle = {\n    left: `${xPos * zoomRatio - scrollXOffset}px`,\n    top: `${yPos * zoomRatio}px`,\n    width: `${width}px`,\n    height: `${height}px`,\n    opacity: 0.5,\n    background: '#ff0000',\n    transformOrigin: `0 0`,\n    transform: `scale(${zoomRatio})`,\n  };\n\n  return (\n    <FullScreen>\n      <Container>\n        <Nav>\n          {fileNames.map(name => (\n            <FileNameBlock\n              key={name}\n              name={name}\n              active={area.imgFileName === name}\n              onClick={onItemClick}\n            >\n              {name}\n            </FileNameBlock>\n          ))}\n        </Nav>\n        <Section>\n          <ButtonWrapperBlock>\n            <ButtonHolder>\n              <StyledButton onClick={onCancel}>취소</StyledButton>\n              <StyledButton cyan onClick={onModalConfirm}>\n                확인\n              </StyledButton>\n            </ButtonHolder>\n\n            <ZoomButtonWrapper>\n              <ZoomButton onClick={onZoomInClicked}>\n                <MdZoomIn />\n              </ZoomButton>\n              <ZoomButton onClick={onZoomOutClicked}>\n                <MdZoomOut />\n              </ZoomButton>\n            </ZoomButtonWrapper>\n          </ButtonWrapperBlock>\n\n          <AreaWrapper\n            onScroll={onImageScroll}\n            onMouseDown={onMouseDown}\n            onMouseUp={onMouseUp}\n            onMouseMove={onMouseMove}\n          >\n            <ImgWrapper>\n              <img\n                onLoad={onImageLoad}\n                ref={imgEl}\n                style={styles}\n                src={`/testinfo/${encodeURI(testName)}/${encodeURI(\n                  selectedFileName,\n                )}`}\n              />\n            </ImgWrapper>\n            <AnswerArea style={answerAreaStyle} />\n          </AreaWrapper>\n        </Section>\n      </Container>\n    </FullScreen>\n  );\n};\n\nexport default AskAnswerAreaModal;\n\n","import qs from 'qs';\nimport client from './client';\n\nexport const writeTestInfo = ({ testName, testDate }) => {\n  return client.post('/api/testinfo', { testName, testDate });\n};\n\nexport const readTestInfo = id => {\n  client.get(`/api/testinfo/${id}`);\n};\n\nexport const listTestInfo = ({ page }) => {\n  const pageQueryString = qs.stringify({ page });\n  return client.get(`/api/testinfo?${pageQueryString}`);\n};\n\nexport const updateTestInfo = ({\n  testinfoId,\n  testName,\n  testCode,\n  testDate,\n}) => {\n  console.log('api', testinfoId, testName, testDate);\n  return client.patch(`/api/testinfo/${testinfoId}`, {\n    testName,\n    testCode,\n    testDate,\n  });\n};\n\nexport const removeTestInfo = id => {\n  const res = client.delete(`/api/testinfo/${id}`);\n  return res;\n};\n\nexport const deleteAllData = async () => {\n  const res = await client.delete('/api/testinfo/');\n  // console.log(res);\n  return res;\n};\n\nexport const getTestImages = async testName => {\n  const res = await client.get(`/api/testimg/${encodeURI(testName)}`);\n  // console.log(res.data);\n  return res.data;\n};\n\nexport const generateTestInfo = async () =>{\n  const res = await client.get('/api/prepare/testinfo');\n  return res;\n}\n\n/**\n * todo : testinfo 에서 score 로 소속을 옮겨야?\n */\nexport const generateEmptyScoreInfo = async () => {\n  const res = await client.get('/api/prepare/scores')\n  return res;\n}\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport AskAnswerAreaModal from './AskAnswerAreaModal';\nimport { getTestImages } from '../../lib/api/testinfo';\n// import listTestPapers from '../../lib/listTestPapers';\n\nconst EditorBlock = styled(Responsive)`\n  padding-top: 5rem;\n  padding-bottom: 5rem;\n`;\n\nconst TitleInput = styled.input`\n  font-size: 3rem;\n  outline: none;\n  padding-bottom: 0.5rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[4]};\n  margin-bottom: 2rem;\n  width: 80%;\n`;\nconst LeftBox = styled.div`\n  float: left;\n  width: 50%;\n`;\nconst RightBox = styled.div`\n  float: right;\n  width: 50%;\n`;\n\nconst AnswerAreaBlock = styled.div`\n  background: ${palette.gray[1]};\n  display: flex;\n  overflow: hidden;\n  width: 100%;\n`;\n\nconst ImgBlock = styled.img`\n  object-fit: none;\n  ${props =>\n    css`\n      object-position: -${props.xPos}px -${props.yPos}px;\n    `}\n`;\n\nconst Editor = ({ testName, criteria, onChangeField }) => {\n  const onChangeScore = e => {\n    onChangeField({ key: 'score', value: e.target.value });\n  };\n  const onChangeNo = e => {\n    onChangeField({ key: 'no', value: e.target.value });\n  };\n  const handleFocus = e => {\n    e.target.select();\n  };\n\n  const [modal, setModal] = useState(false);\n  const [fileNames, setFileNames] = useState([]);\n  const onAreaSetButtonClick = async () => {\n    // testname 을 매개변수를 넘겨서 listTestPapers 를 서버에서 받아옴\n    const files = await getTestImages(testName);\n    setFileNames(files);\n    setModal(true);\n  };\n  const onCancel = () => {\n    setModal(false);\n  };\n  const onConfirm = () => {\n    setModal(false);\n  };\n\n  const { xPos, yPos, width, height, imgFileName } = criteria.question.area;\n  const imgPath = `/testinfo/${encodeURI(testName)}/${encodeURI(\n    imgFileName,\n  )}`;\n\n  return (\n    <>\n      <EditorBlock>\n        <LeftBox>\n          문제 번호:\n          <TitleInput\n            className=\"left-box\"\n            autoFocus\n            placeholder=\"문제 번호를 입력하세요.\"\n            onChange={onChangeNo}\n            onFocus={handleFocus}\n            value={criteria.question.no}\n          />\n        </LeftBox>\n        <RightBox>\n          문제 점수 :\n          <TitleInput\n            className=\"right-box\"\n            placeholder=\"문제 점수를 입력하세요.\"\n            onChange={onChangeScore}\n            value={criteria.question.score}\n          />\n        </RightBox>\n        <AnswerAreaBlock>\n          <Button onClick={onAreaSetButtonClick}>영역 선택</Button>\n\n          <div>\n            <ImgBlock\n              src={imgPath}\n              width={width}\n              height={height}\n              xPos={xPos}\n              yPos={yPos}\n            />\n          </div>\n        </AnswerAreaBlock>\n      </EditorBlock>\n      <AskAnswerAreaModal\n        testName={testName}\n        area={criteria.question.area}\n        fileNames={fileNames}\n        visible={modal}\n        onCancel={onCancel}\n        onConfirm={onConfirm}\n        onChangeField={onChangeField}\n      />\n    </>\n  );\n};\n\nexport default Editor;\n","import React, { useEffect, useCallback } from 'react';\nimport Editor from '../../components/criteria/Editor';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeQuestionAction, initialize } from '../../modules/criteria';\nimport { withRouter } from 'react-router-dom';\n\nconst EditorContainer = ({ match }) => {\n  const { testinfoId } = match.params;\n\n  const dispatch = useDispatch();\n  const { criteria, testName } = useSelector(({ criteria, testinfo }) => ({\n    criteria: criteria,\n    testName: testinfo.testName,\n  }));\n\n  const onChangeField = useCallback(\n    payload => dispatch(changeQuestionAction(payload)),\n    [dispatch],\n  );\n\n  useEffect(() => {\n    if (testinfoId) {\n      onChangeField({ key: 'testinfoId', value: testinfoId });\n      onChangeField({ key: 'testName', value: testName });\n    }\n    return () => {\n      // 언마운트될때 초기화\n      dispatch(initialize());\n    };\n  }, []); //[dispatch]\n\n  return (\n    <Editor\n      testName={testName}\n      criteria={criteria}\n      onChangeField={onChangeField}\n    />\n  );\n};\n\nexport default withRouter(EditorContainer);\n","import React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport { MdDeleteForever } from 'react-icons/md';\nimport AskModal from '../common/AskModal'\n\nconst CriteriaInputBoxBlock = styled.div`\n  width: 100%;\n  border-top: 1px solid ${palette.gray[2]};\n  padding-top: 2rem;\n\n  h4 {\n    color: ${palette.gray[8]};\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst CriteriaForm = styled.form`\n  border-radius: 4px;\n  overflow: hidden;\n  display: flex;\n  width: 800px;\n  border: 1px solid ${palette.gray[9]}; /* 스타일 초기화 */\n\n  button {\n    outline: none;\n    border: none;\n  }\n  div,\n  input,\n  button {\n    font-size: 1rem;\n    padding: 0.5rem;\n  }\n\n  button {\n    width: 100px;\n    cursor: pointer;\n    padding-right: 1rem;\n    padding-left: 1rem;\n    border: none;\n    background: ${palette.gray[8]};\n    color: white;\n    font-weight: bold;\n    &:hover {\n      background: ${palette.gray[6]};\n    }\n  }\n`;\n\nconst InputItemPoint = styled.input`\n  width: 100px;\n`;\n\nconst InputItemCriteria = styled.input`\n  flex: 1;\n`;\n\nconst Criteria = styled.div`\n  /* margin-left: 0.5rem; */\n  margin-top: 0.5rem;\n  color: ${palette.gray[6]};\n  /* cursor: pointer; */\n  /* &:hover {\n    opacity: 0.5;\n  } */\n  .remove {\n    font-size: 1.5rem;\n    color: #ff6b6b;\n    cursor: pointer;\n    &:hover {\n      color: #ff8787;\n    }\n  }\n`;\n\nconst CriteriaListBlock = styled.div`\n  /* display: flex; */\n  margin-top: 1rem;\n`;\n\n// React.memo 를 이용하여 criteria 값이 바뀔때만 다시 렌더링 되도록 처리\nconst CriteriaItem = React.memo(({ criteria, onRemove }) => (\n  <Criteria>\n    {criteria.point}점 : {criteria.text}\n    <span className=\"remove\" onClick={() => onRemove(criteria)}>\n      <MdDeleteForever />\n    </span>\n  </Criteria>\n));\n\nconst CriteriaList = React.memo(({ criterias, onRemove }) => (\n  <CriteriaListBlock>\n    {criterias.map(criteria => (\n      <CriteriaItem\n        key={criteria.text}\n        criteria={criteria}\n        onRemove={onRemove}\n      />\n    ))}\n  </CriteriaListBlock>\n));\n\nconst CriteriaInputBox = ({ criterias, onChangeCriterias }) => {\n  const [input, setInput] = useState('');\n  const [point, setPoint] = useState(0);\n  const [localCriterias, setLocalCriterias] = useState([]);\n  const [errorModal, setErrorModal] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const onErrorConfirm = () => {\n    setErrorModal(false)\n  }\n    // const insertCriteria = useCallback(\n  //   criteria => {\n  //     if (!criteria) return; // 공백이라면 추가하지 않음\n  //     if (localCriterias.includes(criteria)) return; // 중복이라면 추가하지 않음\n  //     setLocalCriterias([...localCriterias, criteria]);\n  //     onChangeCriterias(nextCriterias);\n  //   },\n  //   [localCriterias, onChangeCriterias],\n  // );\n  const insertCriteria = useCallback(newCriteria => {\n    if (!newCriteria.text) return; // 공백이라면 추가하지 않음\n    for (const localCriteria of localCriterias) {\n      if (localCriteria.text === newCriteria.text) return; // 중복이라면 추가하지 않음\n    }\n\n    const nextCriterias = [...localCriterias, newCriteria];\n    setLocalCriterias(nextCriterias);\n    onChangeCriterias(nextCriterias);\n  });\n\n  // const onRemove = useCallback(\n  //   criteria => {\n  //     const nextCriterias = localCriterias.filter(t => t !== criteria);\n  //     setLocalCriterias(nextCriterias);\n  //     onChangeCriterias(nextCriterias);\n  //   },\n  //   [localCriterias, onChangeCriterias],\n  // );\n\n  const onRemove = useCallback(\n    removeCriteria => {\n      const nextCriterias = localCriterias.filter(\n        t => t.text !== removeCriteria.text,\n      );\n      setLocalCriterias(nextCriterias);\n      onChangeCriterias(nextCriterias);\n    },\n    [localCriterias, onChangeCriterias],\n  );\n\n  const onChange = useCallback(e => {\n    setInput(e.target.value);\n  }, []);\n  const onChangePoint = useCallback(e => {\n    setPoint(e.target.value);\n  }, []);\n\n  \n  const onSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      // onChangeField({ key: 'score', value: e.target.value });\n      // insertCriteria(input.trim());\n\n      if(point==0){\n        setErrorMsg(\"점수를 입력해 주세요.\");\n        setErrorModal(true);\n        return;\n      }\n      insertCriteria({ point: point, text: input.trim() });\n      setInput('');\n      setPoint(0);\n    },\n    [input, insertCriteria],\n  );\n\n  const handleFocus = e => {\n    e.target.select();\n  };\n\n  useEffect(() => {\n    if (criterias !== undefined) {\n      // ?\n      setLocalCriterias(criterias);\n    }\n  }, [criterias]);\n\n  return (\n    <CriteriaInputBoxBlock>\n      <h4>채점 기준</h4>\n      <CriteriaForm onSubmit={onSubmit}>\n        <div>평가 점수 :</div>\n\n        <InputItemPoint\n          type=\"number\"\n          min=\"0\"\n          // todo: max\n          onFocus={handleFocus}\n          value={point}\n          onChange={onChangePoint}\n        />\n        <div>평가 기준 :</div>\n        <InputItemCriteria\n          onFocus={handleFocus}\n          placeholder=\"평가 기준을 입력하세요\"\n          value={input}\n          onChange={onChange}\n        />\n        <button type=\"submit\">추가</button>\n      </CriteriaForm>\n      <CriteriaList criterias={localCriterias} onRemove={onRemove} />\n      <AskModal \n        visible={errorModal}\n        title={\"입력오류\"}\n        description={errorMsg}\n        onConfirm={onErrorConfirm}\n        showCancel={false}\n        />\n    </CriteriaInputBoxBlock>\n  );\n};\n\nexport default CriteriaInputBox;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CriteriaInputBox from '../../components/criteria/CriteriaInputBox';\nimport { changeField } from '../../modules/criteria';\n\nconst CriteriaBoxContainer = () => {\n  const dispatch = useDispatch();\n  const details = useSelector(state => state.criteria.details);\n\n  const onChangeCriterias = nextCriterias => {\n    dispatch(\n      changeField({\n        key: 'details',\n        value: nextCriterias,\n      }),\n    );\n  };\n\n  return (\n    <CriteriaInputBox\n      criterias={details}\n      onChangeCriterias={onChangeCriterias}\n    />\n  );\n};\n\nexport default CriteriaBoxContainer;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../common/Button';\nimport AskModal from '../common/AskModal';\n\nconst CriteriaActionButtonsBlock = styled.div`\n  margin-top: 1rem;\n  margin-bottom: 3rem;\n  button + button {\n    margin-left: 0.5rem;\n  }\n`;\n\n// 사용하는 버튼과 일치하는 높이로 설정한 후 서로간의 여백을 지정\nconst StyledButton = styled(Button)`\n  height: 2.215rem;\n  & + & {\n    margin-left: 0.5rem;\n  }\n`;\n\nconst CriteriaActionButtons = ({ user, criteriaId, onCancel, onPublish }) => {\n  const title = criteriaId ? '평가기준 수정' : '평가기준 등록';\n  const desc = title + '중 입니다.';\n\n  const [modal, setModal] = useState(false);\n  const onConfirm = () => {\n    setModal(false);\n  };\n  const [errorModal, setErrorModal] = useState(false);\n  const onErrorConfirm = () =>{\n    setErrorModal(false)\n  }\n\n  const onPublishClick = () => {\n    // todo : 각 평가점수 합이 문제의 점수와 동일한가?\n    \n\n    setModal(true);\n    onPublish();\n  };\n\n  return (\n    <>\n      <CriteriaActionButtonsBlock>\n        {user && (\n          <StyledButton cyan onClick={onPublishClick}>\n            {title}\n          </StyledButton>\n        )}\n\n        <StyledButton onClick={onCancel}>취소</StyledButton>\n      </CriteriaActionButtonsBlock>\n      <AskModal\n        visible={modal}\n        title={title}\n        description={desc}\n        onConfirm={onConfirm}\n        showCancel={false}\n      />\n      <AskModal \n        visible={errorModal}\n        title={\"오류발생\"}\n        \n      />\n    </>\n  );\n};\n\nexport default CriteriaActionButtons;\n","import React, { useEffect } from 'react';\nimport CriteriaActionButtons from '../../components/criteria/CriteriaActionButtons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { writeCriteriaAction, updateCriteria } from '../../modules/criteria';\n\nconst CriteriaActionButtonsContainer = ({ history }) => {\n  const dispatch = useDispatch();\n  const {\n    criteriaId,\n    question,\n    details,\n    criteriaReceived,\n    criteriaError,\n    user,\n  } = useSelector(({ criteria, user }) => ({\n    criteriaId: criteria._id,\n    question: criteria.question,\n    details: criteria.details,\n    criteriaReceived: criteria.criteriaReceived,\n    criteriaError: criteria.criteriaError,\n    user: user.user,\n  }));\n\n  // 채점기준 등록/수정\n  const onPublish = () => {\n    if (criteriaId) {\n      dispatch(updateCriteria({ criteriaId, question, details }));\n    } else {\n      dispatch(writeCriteriaAction({ question, details }));\n    }\n  };\n  // 취소\n  const onCancel = () => {\n    history.goBack();\n  };\n  // 성공 혹은 실패시 할 작업\n  useEffect(() => {\n    if (criteriaReceived) {\n      history.goBack();\n    }\n    if (criteriaError) {\n      console.log(criteriaError);\n    }\n  }, [history, criteriaReceived, criteriaError]);\n\n  return (\n    <CriteriaActionButtons\n      user={user}\n      criteriaId={criteriaId}\n      onPublish={onPublish}\n      onCancel={onCancel}\n    />\n  );\n};\n\nexport default withRouter(CriteriaActionButtonsContainer);\n","import React from 'react';\nimport EditorContainer from '../containers/criteria/EditorContainer';\nimport Resonsive from '../components/common/Responsive';\nimport CriteriaBoxContainer from '../containers/criteria/CriteriaBoxContainer';\nimport CriteriaActionButtonsContainer from '../containers/criteria/CriteriaActionButtonsContainer';\n\nconst CriteriaWritePage = () => {\n  return (\n    <Resonsive>\n      <EditorContainer />\n      <CriteriaBoxContainer />\n      <CriteriaActionButtonsContainer />\n    </Resonsive>\n  );\n};\n\nexport default CriteriaWritePage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport { Link } from 'react-router-dom';\n\n/**\n * 회원가입 / 로그인 페이지의 레이아웃을 담당하는 컴포넌트입니다.\n */\n\n/* 화면 전체를 채움 */\nconst AuthTemplateBlock = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  background: ${palette.gray[2]};\n  /* flex로 내부 내용 중앙 정렬 */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\n/* 흰색 박스 */\nconst WhiteBox = styled.div`\n  .logo-area {\n    display: block;\n    padding-bottom: 2rem;\n    text-align: center;\n    font-weight: bold;\n    letter-spacing: 2px;\n  }\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\n  padding: 2rem;\n  width: 360px;\n  background: white;\n  border-radius: 2px;\n`;\n\nconst AuthTemplate = ({ children }) => {\n  return (\n    <AuthTemplateBlock>\n      <WhiteBox>\n        <div className=\"logo-area\">\n          <Link to=\"/\">채점관리</Link>\n        </div>\n        {children}\n      </WhiteBox>\n    </AuthTemplateBlock>\n  );\n};\n\nexport default AuthTemplate;\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\n\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\n  'auth/REGISTER',\n);\n\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\n  'auth/LOGIN',\n);\n\nexport const changeField = createAction(\n  CHANGE_FIELD,\n  ({ form, key, value }) => ({\n    form, // register , login\n    key, // username, password, passwordConfirm\n    value, // 실제 바꾸려는 값\n  }),\n);\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form); // register / login\nexport const register = createAction(REGISTER, ({ username, password }) => ({\n  username,\n  password,\n}));\nexport const login = createAction(LOGIN, ({ username, password }) => ({\n  username,\n  password,\n}));\n\n// saga 생성\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\nexport function* authSaga() {\n  yield takeLatest(REGISTER, registerSaga);\n  yield takeLatest(LOGIN, loginSaga);\n}\n\nconst initialState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: '',\n  },\n  login: {\n    username: '',\n    password: '',\n  },\n  auth: null,\n  authError: null,\n};\n\nconst auth = handleActions(\n  {\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\n      produce(state, draft => {\n        draft[form][key] = value; // 예: state.register.username을 바꾼다\n      }),\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\n      ...state,\n      [form]: initialState[form],\n      authError: null, // 폼 전환 시 회원 인증 에러 초기화\n    }),\n    // 회원가입 성공\n    [REGISTER_SUCCESS]: (state, { payload: auth }) => ({\n      ...state,\n      authError: null,\n      auth,\n    }),\n    // 회원가입 실패\n    [REGISTER_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n    // 로그인 성공\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\n      ...state,\n      authError: null,\n      auth,\n    }),\n    // 로그인 실패\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n  },\n  initialState,\n);\n\nexport default auth;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/styles/palette';\nimport Button from '../common/Button';\n\n/**\n * 회원가입 또는 로그인 폼을 보여줍니다.\n */\n\nconst AuthFormBlock = styled.div`\n  h3 {\n    margin: 0;\n    color: ${palette.gray[8]};\n    margin-bottom: 1rem;\n  }\n`;\n\n/**\n * 스타일링된 input\n */\nconst StyledInput = styled.input`\n  font-size: 1rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  outline: none;\n  width: 100%;\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n  & + & {\n    margin-top: 1rem;\n  }\n`;\n\n/**\n * 폼 하단에 로그인 혹은 회원가입 링크를 보여줌\n */\nconst Footer = styled.div`\n  margin-top: 2rem;\n  text-align: right;\n  a {\n    color: ${palette.gray[6]};\n    text-decoration: underline;\n    &:hover {\n      color: ${palette.gray[9]};\n    }\n  }\n`;\n\nconst ButtonWithMarginTop = styled(Button)`\n  margin-top: 1rem;\n`;\n\nconst textMap = {\n  login: '로그인',\n  register: '회원가입',\n};\n\n/**\n * 에러를 보여줍니다\n */\nconst ErrorMessage = styled.div`\n  color: red;\n  text-align: center;\n  font-size: 0.875rem;\n  margin-top: 1rem;\n`;\n\nconst AuthForm = ({ type, form, onChange, onSubmit, error }) => {\n  const text = textMap[type];\n  return (\n    <AuthFormBlock>\n      <h3>{text}</h3>\n      <form onSubmit={onSubmit}>\n        <StyledInput\n          autoComplete=\"username\"\n          name=\"username\"\n          placeholder=\"아이디\"\n          onChange={onChange}\n          value={form.username}\n        />\n        <StyledInput\n          autoComplete=\"new-password\"\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          type=\"password\"\n          onChange={onChange}\n          value={form.password}\n        />\n        {type === 'register' && (\n          <StyledInput\n            autoComplete=\"new-password\"\n            name=\"passwordConfirm\"\n            placeholder=\"비밀번호 확인\"\n            type=\"password\"\n            onChange={onChange}\n            value={form.passwordConfirm}\n          />\n        )}\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        <ButtonWithMarginTop cyan fullWidth style={{ marginTop: '1rem' }}>\n          {text}\n        </ButtonWithMarginTop>\n      </form>\n      <Footer>\n        {type === 'login' ? (\n          <Link to=\"/register\">회원가입</Link>\n        ) : (\n          <Link to=\"/login\">로그인</Link>\n        )}\n      </Footer>\n    </AuthFormBlock>\n  );\n};\n\nexport default AuthForm;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, register } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\n\nconst RegisterForm = ({ history }) => {\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.register,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n  // 인풋 변경 이벤트 핸들러\n  const onChange = e => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form: 'register',\n        key: name,\n        value,\n      }),\n    );\n  };\n\n  // 폼 등록 이벤트 핸들러\n  const onSubmit = e => {\n    e.preventDefault();\n    const { username, password, passwordConfirm } = form;\n    // 하나라도 비어있다면\n    if ([username, password, passwordConfirm].includes('')) {\n      setError('빈 칸을 모두 입력하세요.');\n      return;\n    }\n    // 비밀번호가 일치하지 않는다면\n    if (password !== passwordConfirm) {\n      setError('비밀번호가 일치하지 않습니다.');\n      dispatch(changeField({ form: 'register', key: 'password', value: '' }));\n      dispatch(\n        changeField({ form: 'register', key: 'passwordConfirm', value: '' }),\n      );\n      return;\n    }\n    dispatch(register({ username, password }));\n  };\n\n  // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n  useEffect(() => {\n    dispatch(initializeForm('register'));\n  }, [dispatch]);\n\n  // 회원가입 성공 / 실패 처리\n  useEffect(() => {\n    if (authError) {\n      // 계정명이 이미 존재할 때\n      if (authError.response.status === 409) {\n        setError('이미 존재하는 계정명입니다.');\n        return;\n      }\n      // 기타 이유\n      setError('회원가입 실패');\n      return;\n    }\n\n    if (auth) {\n      console.log('회원가입 성공');\n      console.log(auth);\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  // user 값이 잘 설정되었는지 확인\n  useEffect(() => {\n    if (user) {\n      history.push('/'); // 홈 화면으로 이동\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localstorage is not working');\n      }\n    }\n  }, [history, user]);\n\n  return (\n    <AuthForm\n      type=\"register\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      error={error}\n    />\n  );\n};\n\nexport default withRouter(RegisterForm);\n","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport RegisterForm from '../containers/auth/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <AuthTemplate>\n      <RegisterForm />\n    </AuthTemplate>\n  );\n};\n\nexport default RegisterPage;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\n\nconst LoginForm = ({ history }) => {\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n  // 인풋 변경 이벤트 핸들러\n  const onChange = e => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form: 'login',\n        key: name,\n        value,\n      }),\n    );\n  };\n\n  // 폼 등록 이벤트 핸들러\n  const onSubmit = e => {\n    e.preventDefault();\n    const { username, password } = form;\n    dispatch(login({ username, password }));\n  };\n\n  // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('로그인 실패');\n      return;\n    }\n    if (auth) {\n      console.log('로그인 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localstorage is not working');\n      }\n    }\n  }, [history, user]);\n\n  return (\n    <AuthForm\n      type=\"login\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      error={error}\n    />\n  );\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport LoginForm from '../containers/auth/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <AuthTemplate>\n      <LoginForm />\n    </AuthTemplate>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport EditorContainer from '../containers/criteria/EditorContainer';\nimport CriteriaBoxContainer from '../containers/criteria/CriteriaBoxContainer';\nimport CriteriaActionButtonsContainer from '../containers/criteria/CriteriaActionButtonsContainer';\nimport Resonsive from '../components/common/Responsive';\n\nconst ReadCriteriaPage = () => {\n  return (\n    <div>\n      <HeaderContainer />\n      <Resonsive>\n        <EditorContainer />\n        <CriteriaBoxContainer />\n        <CriteriaActionButtonsContainer />\n      </Resonsive>\n    </div>\n  );\n};\n\nexport default ReadCriteriaPage;\n","import React from 'react';\nimport AskModal from '../common/AskModal';\n\nconst AskRemoveTestInfoModal = ({ visible, onConfirm, onCancel }) => {\n  return (\n    <AskModal\n      visible={visible}\n      title=\"시험 정보 삭제\"\n      description=\"시험 정보를 정말 삭제하시겠습니까?\"\n      confirmText=\"삭제\"\n      onConfirm={onConfirm}\n      onCancel={onCancel}\n    />\n  );\n};\n\nexport default AskRemoveTestInfoModal;\n","import React from 'react';\nimport Datetime from 'react-datetime';\nimport '../../react-datetime.css';\nimport { MdDateRange } from 'react-icons/md';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\n\nconst DateInputWrapper = styled.div`\n  font-size: 1rem;\n  display: flex;\n  align-items: center;\n`;\nconst DateInput = styled.input`\n  border: 1px solid ${palette.gray[5]};\n  font-size: 1rem;\n  width: 160px;\n  text-align: center;\n  margin-left: 10px;\n`;\n\nconst OpenCalendarWrapper = styled.span`\n  font-size: 1.5rem;\n  color: ${palette.gray[6]};\n  cursor: pointer;\n  align-items: center;\n  text-align: center;\n\n  &:hover {\n    color: ${palette.gray[4]};\n  }\n`;\n\nconst MyDatePicker = ({ onChangeField, title = '날짜', selectedDate = '' }) => {\n  const handleChange = e => {\n    onChangeField({\n      key: 'testDate',\n      value: {\n        year: e.format('YYYY'),\n        month: e.format('M'),\n        day: e.format('D'),\n      },\n    });\n  };\n  const renderInput = (props, openCalendar, closeCalendar) => {\n    const clear = () => {\n      props.onChange({ target: { value: '' } });\n    };\n\n    return (\n      <DateInputWrapper>\n        <h3>{title} : </h3>\n        <DateInput {...props} />\n        <OpenCalendarWrapper>\n          <MdDateRange onClick={openCalendar}></MdDateRange>\n        </OpenCalendarWrapper>\n      </DateInputWrapper>\n    );\n  };\n\n  return (\n    <Datetime\n      locale={'ko-kr'}\n      defaultValue={selectedDate}\n      timeFormat={false}\n      dateFormat=\"YYYY년 M월 D일\"\n      onChange={handleChange}\n      renderInput={renderInput}\n      closeOnSelect={true}\n    />\n  );\n};\n\nexport default MyDatePicker;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../common/Button';\nimport MyDatePicker from '../common/MyDatePicker';\nimport palette from '../../lib/styles/palette';\n\nconst FullScreen = styled.div`\n  position: fixed;\n  z-index: 30;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.25);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CreateTestInfoModalBlock = styled.div`\n  width: 480px;\n  background: white;\n  padding: 1.5rem;\n  border-radius: 4px;\n  box-shadow: 0px 0px 8px solid(0, 0, 0, 0.125);\n  h2 {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n  p {\n    margin-bottom: 3rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  height: 2rem;\n  & + & {\n    margin-left: 0.75rem;\n  }\n`;\n\nconst StyledInput = styled.input`\n  font-size: 1rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  outline: none;\n  width: 100%;\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n  & + & {\n    margin-top: 1rem;\n  }\n`;\n\nconst CodeInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst AskModifyTestInfoModal = ({\n  testinfo_update,\n  onChangeUpdateField,\n  visible,\n  onConfirm,\n  onCancel,\n}) => {\n  if (!visible) return null;\n\n  const onChangeTestName = e => {\n    onChangeUpdateField({ key: 'testName', value: e.target.value });\n  };\n\n  const onChangeTeseCode = e => {\n    onChangeUpdateField({ key: 'testCode', value: e.target.value });\n  };\n\n  const selectedDate = new Date(\n    testinfo_update.testDate.year,\n    testinfo_update.testDate.month - 1,\n    testinfo_update.testDate.day,\n  );\n\n  return (\n    <FullScreen>\n      <CreateTestInfoModalBlock>\n        <h2>시험 정보 수정하기</h2>\n        <h3>시험명 :</h3>\n        <StyledInput\n          onChange={onChangeTestName}\n          value={testinfo_update.testName}\n        />\n        <MyDatePicker\n          onChangeField={onChangeUpdateField}\n          title={'시험날짜'}\n          selectedDate={selectedDate}\n        />\n        <CodeInputWrapper>\n          <h3>시험지시작번호 : </h3>\n          <StyledInput\n            onChange={onChangeTeseCode}\n            value={testinfo_update.testCode}\n          />\n        </CodeInputWrapper>\n        <StyledButton cyan onClick={onConfirm}>\n          확인\n        </StyledButton>\n        <StyledButton onClick={onCancel}>취소</StyledButton>\n      </CreateTestInfoModalBlock>\n    </FullScreen>\n  );\n};\n\nexport default AskModifyTestInfoModal;\n","import React, { useState } from 'react';\nimport { MdDeleteForever, MdEdit } from 'react-icons/md';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport AskRemoveTestInfoModal from './AskRemoveTestInfoModal';\nimport AskModifyTestInfoModal from './AskModifyTestInfoModal';\nimport { Link } from 'react-router-dom';\n\nconst TestInfoItemBlock = styled.div`\n  padding: 1rem;\n  display: flex;\n  align-items: center;\n  border-top: 1px solid #dee2e6;\n  &:nth-child(odd) {\n    background: #f8f9fa;\n  }\n  &:hover {\n    cursor: pointer;\n    background: ${palette.gray[3]};\n  }\n`;\n\nconst TestInfoTextBlock = styled.div`\n  align-items: stretch;\n  width: 100%;\n`;\n\nconst ButtonBlockWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ButtonBlock = styled.div`\n  font-size: 1.3rem;\n  color: #ff6b6b;\n  cursor: pointer;\n  &:hover {\n    color: red;\n  }\n  & + & {\n    margin-left: 1rem;\n  }\n`;\n\nconst TestInfoItem = ({\n  testinfo,\n  onSetUpdateInfo,\n  onSetTestInfo,\n  onUpdate,\n  onRemove,\n  onChangeUpdateField,\n  testinfo_update,\n}) => {\n  const [updateModal, setUpdateModal] = useState(false);\n  const onUpdateCancel = () => {\n    setUpdateModal(false);\n  };\n  const onUpdateConrirm = () => {\n    setUpdateModal(false);\n    onUpdate();\n  };\n  const [modal, setModal] = useState(false);\n  const onRemoveClick = () => {\n    setModal(true);\n  };\n  const onCancel = () => {\n    setModal(false);\n  };\n\n  const onRemoveConfirm = () => {\n    setModal(false);\n    onRemove(testinfo._id);\n  };\n  const onEditClick = () => {\n    onSetUpdateInfo({ testinfo_update: testinfo });\n    setUpdateModal(true);\n  };\n  const onItemClick = () => {\n    onSetTestInfo({ testinfo: testinfo });\n  };\n\n  return (\n    <>\n      <TestInfoItemBlock>\n        <TestInfoTextBlock onClick={onItemClick}>\n          <Link to={`/listCriteria/${testinfo._id}`}>\n            <TestInfoTextBlock>{testinfo.testName}</TestInfoTextBlock>\n          </Link>\n        </TestInfoTextBlock>\n\n        <ButtonBlockWrapper>\n          {/* <ButtonBlock onClick={onEditClick}>\n            <MdEdit />\n          </ButtonBlock> */}\n          <ButtonBlock onClick={onRemoveClick}>\n            <MdDeleteForever />\n          </ButtonBlock>\n        </ButtonBlockWrapper>\n      </TestInfoItemBlock>\n\n      <AskRemoveTestInfoModal\n        visible={modal}\n        onConfirm={onRemoveConfirm}\n        onCancel={onCancel}\n      />\n      <AskModifyTestInfoModal\n        testinfo_update={testinfo_update}\n        onChangeUpdateField={onChangeUpdateField}\n        visible={updateModal}\n        onConfirm={onUpdateConrirm}\n        onCancel={onUpdateCancel}\n      />\n    </>\n  );\n};\n\nexport default TestInfoItem;\n","import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Button from '../common/Button';\nimport AskModal from './AskModal';\nimport {\n  prepareImgsForTest,\n  countNotProcessed,\n  prepareImgsSecondProcess,\n  fileCopy100_not_rotate,\n  moveToAnswerGroupDir,\n} from '../../lib/api/prepare';\nimport palette from '../../lib/styles/palette';\n\nconst FullScreen = styled.div`\n  position: fixed;\n  z-index: 20;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.25);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DivSpan = styled.span`\n  color: red;\n`;\n\nconst SettingsModalBlock = styled.div`\n  width: 480px;\n  background: white;\n  padding: 1.5rem;\n  border-radius: 4px;\n  box-shadow: 0px 0px 8px solid(0, 0, 0, 0.125);\n  h2 {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n  p {\n    margin-bottom: 3rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  height: 2rem;\n  & + & {\n    margin-left: 0.75rem;\n  }\n`;\n\nconst ScoringPrepareButtonBlock = styled.div`\n  margin-top: 1rem;\n  margin-bottom: 3rem;\n`;\n\nconst StyledInput = styled.input`\n  font-size: 1rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  outline: none;\n  width: 100px;\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n  margin: 1rem;\n`;\n\nconst AskSettingsModal = ({\n  visible,\n  onGenerateEmptyScoreInfo,\n  onGenerateTestInfo,\n  onDeleteAllData,\n  onCreateButtonClicked,\n  onConfirm,\n  onCancel,\n  user,\n  lastGeneratedScore, \n  totalCount,\n}) => {\n  const [waitModal, setWaitModal] = useState(false);\n  const [fileCount, setFileCount] = useState(0);\n  const inputRef = useRef(null);\n\n  useEffect(()=>{\n    setWaitModal(false);\n  }, [lastGeneratedScore])\n\n  if (!visible) return null;\n\n  const getFileCount = async () => {\n    return await countNotProcessed();\n  };\n\n  const onPrepareBtnClick = () => {\n    // const interval = setInterval(async () => {\n    //   const result = await getFileCount();\n    //   setFileCount(result.data);\n    //   if (result.data === 0) {\n    //     clearInterval(interval);\n    //     setTimeout(() => {\n    //       alert('채점 준비가 완료되었습니다.');\n    //     }, 1000);\n    //   }\n    // }, 1000);\n    prepareImgsForTest(user._id);\n  };\n\n  const onSecondProcessBtnClick = () => {\n    prepareImgsSecondProcess();\n  };\n\n  const onFileCopyClicked = () => {\n    const startFileNo = inputRef.current.value;\n    fileCopy100_not_rotate(startFileNo);\n    inputRef.current.value = parseInt(startFileNo) + 100;\n  };\n\n  const onDeleteAllDataClicked = () => {\n    onDeleteAllData();\n  };\n\n  const onGenerateTestInfoClicked = () =>{\n    onGenerateTestInfo();\n  }\n\n  const onGenerateEmptyScoreInfoClicked = () => {\n    setWaitModal(true)\n    onGenerateEmptyScoreInfo();\n  }\n\n  return (\n    <FullScreen>\n      <SettingsModalBlock>\n        <h1>Settings</h1>\n        <hr />\n        <h2>채점 정보 입력 시작</h2>\n        <Button big cyan onClick={onGenerateTestInfoClicked}>\n          채점 정보 입력 시작\n        </Button>\n        <hr />\n        <ScoringPrepareButtonBlock>\n          <h2>채점 시작</h2>\n          <Button big cyan onClick={onGenerateEmptyScoreInfoClicked}>\n            채점 시작\n          </Button>\n        </ScoringPrepareButtonBlock>\n        <hr />\n        <div className=\"buttons\">\n          <StyledButton onClick={onCancel}>닫기</StyledButton>\n        </div>\n      </SettingsModalBlock>\n      <AskModal\n        visible={waitModal}\n        title=\"채점 정보 생성중...\"\n        description=\"잠시만 기다려주세요.\"\n        showProgressbar={true}\n        showCancel={false}\n      />\n    </FullScreen>\n  );\n};\n\nexport default AskSettingsModal;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../common/Button';\nimport MyDatePicker from '../common/MyDatePicker';\nimport palette from '../../lib/styles/palette';\n\nconst FullScreen = styled.div`\n  position: fixed;\n  z-index: 30;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.25);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CreateTestInfoModalBlock = styled.div`\n  width: 480px;\n  background: white;\n  padding: 1.5rem;\n  border-radius: 4px;\n  box-shadow: 0px 0px 8px solid(0, 0, 0, 0.125);\n  h2 {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n  p {\n    margin-bottom: 3rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  height: 2rem;\n  & + & {\n    margin-left: 0.75rem;\n  }\n`;\n\nconst StyledInput = styled.input`\n  margin-bottom: 1rem;\n  font-size: 1rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  outline: none;\n  width: 100%;\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n  & + & {\n    margin-top: 1rem;\n  }\n`;\n\nconst CodeInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst AskCreateTestInfoModal = ({\n  onChangeField,\n  visible,\n  onConfirm,\n  onCancel,\n}) => {\n  if (!visible) return null;\n\n  const onChangeTestName = e => {\n    onChangeField({ key: 'testName', value: e.target.value });\n  };\n  const onChangeTeseCode = e => {\n    onChangeField({ key: 'testCode', value: e.target.value });\n  };\n\n  return (\n    <FullScreen>\n      <CreateTestInfoModalBlock>\n        <h2>시험 정보 생성하기</h2>\n        <h3>시험명 :</h3>\n        <StyledInput onChange={onChangeTestName} />\n        {/* <MyDatePicker onChangeField={onChangeField} title={'시험날짜'} />\n        <CodeInputWrapper>\n          <h3>시험지시작번호 : </h3>\n          <StyledInput onChange={onChangeTeseCode} />\n        </CodeInputWrapper> */}\n        <div className=\"buttons\">\n          <StyledButton cyan onClick={onConfirm}>\n            확인\n          </StyledButton>\n          <StyledButton onClick={onCancel}>취소</StyledButton>\n        </div>\n      </CreateTestInfoModalBlock>\n    </FullScreen>\n  );\n};\n\nexport default AskCreateTestInfoModal;\n","import React, { useState, useRef, useEffect } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/styles/palette';\nimport { Link } from 'react-router-dom';\nimport TestInfoItem from './TestInfoItem';\nimport AskSettingsModal from '../common/AskSettingsModal';\nimport { MdSettings } from 'react-icons/md';\nimport AskCreateTestInfoModal from './AskCreateTestInfoModal';\nimport { countNotProcessed } from '../../lib/api/prepare';\nimport AskModal from '../common/AskModal';\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n        padding:0;\n        margin:0;\n        background: #e9ecef;\n    }\n`;\n\nconst TestInfoListBlock = styled.div`\n  width: 512px;\n  // width 가 주어진 상태에서 좌우 중앙 정렬\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 6rem;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nconst TestInfoListTitle = styled.div`\n  background: #22b8cf;\n  color: white;\n  height: 4rem;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst TestInfoListBody = styled.div`\n  background: white;\n`;\n\nconst NewTestButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin: 0.25rem;\n`;\n\nconst SettingsWrppaer = styled.div`\n  font-size: 1.25rem;\n  margin-left: 0.25rem;\n  cursor: pointer;\n  align-items: center;\n  text-align: center;\n\n  &:hover {\n    color: ${palette.gray[4]};\n  }\n`;\n\nconst TestInfoListComponent = ({\n  onGenerateEmptyScoreInfo,\n  onGenerateTestInfo,\n  onDeleteAllData,\n  onRemove,\n  onPublish,\n  onChangeField,\n  loading,\n  error,\n  onSetUpdateInfo,\n  onSetTestInfo,\n  onUpdate,\n  onChangeUpdateField,\n  testinfos,\n  testinfo_update,\n  user,\n  lastGeneratedScore, \n}) => {\n  const [modal, setModal] = useState(false);\n  const onCreateButtonClicked = () => {\n    setModal(true);\n  };\n  const onCancel = () => {\n    setModal(false);\n  };\n  const onConfirm = () => {\n    setModal(false);\n    onPublish();\n  };\n\n  const [settginsModal, setSettingsModal] = useState(false);\n  const totalCount = useRef(0);\n  const onSettingsModalClick = async () => {\n    //const result = await countNotProcessed();\n    //totalCount.current = result.data;\n    setSettingsModal(true);\n  };\n  const onSettingsCancel = () => {\n    setSettingsModal(false);\n  };\n  const onSettingsConfirm = () => {\n    setSettingsModal(false);\n  };\n  useEffect(()=>{\n    setSettingsModal(false);\n  }, [testinfos, lastGeneratedScore])\n\n  if (error) {\n    return <TestInfoListBlock>에러가 발생했습니다.</TestInfoListBlock>;\n  }\n\n  return (\n    <>\n      <GlobalStyle />\n      <TestInfoListBlock>\n        <TestInfoListTitle>\n          채점 정보 시험 리스트\n          <SettingsWrppaer>\n            <MdSettings onClick={onSettingsModalClick} />\n          </SettingsWrppaer>\n        </TestInfoListTitle>\n        <TestInfoListBody>\n          <NewTestButtonWrapper>\n            {/* <Button big onClick={onCreatButtonClick}>\n              새 시험 정보 추가\n            </Button> */}\n          </NewTestButtonWrapper>\n          {!loading && testinfos && (\n            <div>\n              {testinfos.map((testinfo, index) => (\n                <TestInfoItem\n                  key={index}\n                  testinfo={testinfo}\n                  onUpdate={onUpdate}\n                  onRemove={onRemove}\n                  onChangeUpdateField={onChangeUpdateField}\n                  onSetUpdateInfo={onSetUpdateInfo}\n                  onSetTestInfo={onSetTestInfo}\n                  testinfo_update={testinfo_update}\n                />\n              ))}\n            </div>\n          )}\n        </TestInfoListBody>\n      </TestInfoListBlock>\n      <AskCreateTestInfoModal\n        onChangeField={onChangeField}\n        visible={modal}\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n      />\n      <AskSettingsModal\n        visible={settginsModal}\n        onGenerateEmptyScoreInfo={onGenerateEmptyScoreInfo}\n        onGenerateTestInfo={onGenerateTestInfo}\n        onDeleteAllData={onDeleteAllData}\n        onCreateButtonClicked={onCreateButtonClicked}\n        onCancel={onSettingsCancel}\n        onConfirm={onSettingsConfirm}\n        user={user}\n        lastGeneratedScore={lastGeneratedScore} // last generated score info\n        totalCount={totalCount.current}\n      />\n    </>\n  );\n};\n\nexport default TestInfoListComponent;\n","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as testinfoAPI from '../lib/api/testinfo';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst [\n  LIST_TESTINFO,\n  LIST_TESTINFO_SUCCESS,\n  LIST_TESTINFO_FAILURE,\n] = createRequestActionTypes('testinfo/LIST_TESTINFO');\n\nexport const listTestinfo = createAction(LIST_TESTINFO, ({ page }) => ({\n  page,\n}));\n\nconst listTestinfoSaga = createRequestSaga(\n  LIST_TESTINFO,\n  testinfoAPI.listTestInfo,\n);\n\nconst [\n  GENERATE_EMPTY_SCORE_INFO,\n  GENERATE_EMPTY_SCORE_INFO_SUCCESS,\n  GENERATE_EMPTY_SCORE_INFO_FAILURE,\n] = createRequestActionTypes('testinfo/GENERATE_EMPTY_SCORE_INFO');\n\nexport const generateEmptyScoreInfo = createAction(GENERATE_EMPTY_SCORE_INFO);\nconst generateEmptyScoreInfoRequestSage = createRequestSaga(\n  GENERATE_EMPTY_SCORE_INFO,\n  testinfoAPI.generateEmptyScoreInfo,\n)\n\nconst [GENERATE_TEST_INFO,\n  GENERATE_TEST_INFO_SUCCESS,\n  GENERATE_TEST_INFO_FAILURE,\n] = createRequestActionTypes('testinfo/GENERATE_TEST_INFO');\n\nexport const generateTestInfo = createAction(GENERATE_TEST_INFO);\n\nconst generateTestInfoRequestSage = createRequestSaga(\n  GENERATE_TEST_INFO,\n  testinfoAPI.generateTestInfo,\n)\n\nconst [\n  DELETE_ALL_DATA,\n  DELETE_ALL_DATA_SUCCESS,\n  DELETE_ALL_DATA_FAILURE,\n] = createRequestActionTypes('testinfo/DELETE_ALL_DATA');\n\nexport const deleteAllDataAction = createAction(DELETE_ALL_DATA);\n\nconst deleteAllDataRequestSaga = createRequestSaga(\n  DELETE_ALL_DATA,\n  testinfoAPI.deleteAllData,\n);\n\nexport function* listTestinfoRequestSaga() {\n  yield takeLatest(LIST_TESTINFO, listTestinfoSaga);\n  yield takeLatest(DELETE_ALL_DATA, deleteAllDataRequestSaga);\n  yield takeLatest(GENERATE_TEST_INFO, generateTestInfoRequestSage);\n  yield takeLatest(GENERATE_EMPTY_SCORE_INFO, generateEmptyScoreInfoRequestSage);\n}\n\nconst initialState = {\n  testinfos: null,\n  error: null,\n  lastPage: 1,\n};\n\nconst testinfos = handleActions(\n  {\n    [LIST_TESTINFO_SUCCESS]: (\n      state,\n      { payload: testinfos, meta: response },\n    ) => ({\n      ...state,\n      testinfos,\n      lastPage: parseInt(response.headers['last-page'], 10),\n    }),\n    [LIST_TESTINFO_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n    [GENERATE_TEST_INFO_SUCCESS]: (state, { payload: testinfos, meta: response },) => ({\n      ...state,\n      testinfos: testinfos,\n      error: null,\n    }),\n    [GENERATE_TEST_INFO_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n    [GENERATE_EMPTY_SCORE_INFO_SUCCESS]: (state, { payload: response }) => ({\n      ...state,\n      score: response,\n      error: null,\n    }),\n    [GENERATE_EMPTY_SCORE_INFO_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error: null,\n    }),\n    [DELETE_ALL_DATA_SUCCESS]: (state, { payload: response }) => ({\n      ...state,\n      testinfos: null,\n      error: null,\n    }),\n    [DELETE_ALL_DATA_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n  },\n  initialState,\n);\n\nexport default testinfos;\n","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as testinfoAPI from '../lib/api/testinfo';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst INITIALIZE = 'testinfo/INITIALIZE';\nconst CHANGE_FIELD = 'testinfo/CHANGE_FIELD';\nconst SET_TESTINFO = 'testinfo/SET_TESTINFO';\n\nconst [\n  WRITE_TESTINFO,\n  WRITE_TESTINFO_SUCCESS,\n  WRITE_TESTINFO_FAILURE,\n] = createRequestActionTypes('testinfo/WRITE_TESTINFO');\n\nexport const initialize = createAction(INITIALIZE);\nexport const setTestinfo = createAction(SET_TESTINFO, ({ testinfo }) => ({\n  testinfo,\n}));\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\n  key,\n  value,\n}));\nexport const writeTestinfoAction = createAction(\n  WRITE_TESTINFO,\n  ({ testName }) => ({\n    testName,\n  }),\n);\nconst writeTestinfoRequestSaga = createRequestSaga(\n  WRITE_TESTINFO,\n  testinfoAPI.writeTestInfo,\n);\n\nconst [\n  READ_TESTINFO,\n  READ_TESTINFO_SUCCESS,\n  READ_TESTINFO_FAILURE,\n] = createRequestActionTypes('testinfo/READ_TESTINFO');\n\nconst UNLOAD_TESTINFO = 'testinfo/UNLOAD_TESTINFO';\n\nconst [\n  DELETE_TESTINFO,\n  DELETE_TESTINFO_SUCCESS,\n  DELETE_TESTINFO_FAILURE,\n] = createRequestActionTypes('testinfo/DELETE_TESTINFO');\n\nexport const readTestinfoAction = createAction(READ_TESTINFO, id => id);\nexport const unloadTestinfoAction = createAction(UNLOAD_TESTINFO);\nexport const deleteTestinfoAction = createAction(DELETE_TESTINFO, id => id);\n\nconst readTestinfoRequestSaga = createRequestSaga(\n  READ_TESTINFO,\n  testinfoAPI.readTestInfo,\n);\n\nconst deleteTestinfoRequestSaga = createRequestSaga(\n  DELETE_TESTINFO,\n  testinfoAPI.removeTestInfo,\n);\n\nexport function* testInfoSaga() {\n  yield takeLatest(WRITE_TESTINFO, writeTestinfoRequestSaga);\n  yield takeLatest(READ_TESTINFO, readTestinfoRequestSaga);\n  yield takeLatest(DELETE_TESTINFO, deleteTestinfoRequestSaga);\n}\n\nconst initialState = {\n  testName: '',\n  testinfoReceived: null,\n  testinfoError: null,\n  status: 0,\n};\n\nconst testinfo = handleActions(\n  {\n    [INITIALIZE]: state => initialState,\n    [SET_TESTINFO]: (state, { payload: { testinfo } }) => ({\n      ...testinfo,\n    }),\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\n      ...state,\n      [key]: value,\n    }),\n    [WRITE_TESTINFO]: state => ({\n      ...state,\n      testinfoReceived: null,\n      testinfoError: null,\n    }),\n    [WRITE_TESTINFO_SUCCESS]: (state, { payload: testinfoReceived }) => ({\n      ...state,\n      testinfoReceived,\n    }),\n    [WRITE_TESTINFO_FAILURE]: (state, { payload: testinfoError }) => ({\n      ...state,\n      testinfoError,\n    }),\n    [READ_TESTINFO_SUCCESS]: (state, { payload: testinfoReceived }) => ({\n      ...state,\n      testinfoReceived,\n    }),\n    [READ_TESTINFO_FAILURE]: (state, { payload: testinfoError }) => ({\n      ...state,\n      testinfoError,\n    }),\n    [DELETE_TESTINFO_SUCCESS]: (state, { payload: response }) => ({\n      ...state,\n      status: response.status,\n    }),\n    [DELETE_TESTINFO_FAILURE]: (state, { payload: response }) => ({\n      ...state,\n      status: response.status,\n    }),\n    [UNLOAD_TESTINFO]: () => initialState,\n  },\n  initialState,\n);\n\nexport default testinfo;\n","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as testinfoAPI from '../lib/api/testinfo';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst INITIALIZE = 'testinfo_update/INITIALIZE';\nconst CHANGE_FIELD = 'testinfo_update/CHANGE_FIELD';\nconst SET_TESTINFO = 'testinfo_update/SET_TESTINFO';\n\nconst [\n  UPDATE_TESTINFO,\n  UPDATE_TESTINFO_SUCCESS,\n  UPDATE_TESTINFO_FAILURE,\n] = createRequestActionTypes('testinfo_update/UPDATE_TESTINFO');\n\nexport const initializeUpdateAction = createAction(INITIALIZE);\nexport const setUpdateTestinfoAction = createAction(\n  SET_TESTINFO,\n  ({ testinfo_update }) => ({\n    testinfo_update,\n  }),\n);\nexport const changeUpdateFieldAction = createAction(\n  CHANGE_FIELD,\n  ({ key, value }) => ({\n    key,\n    value,\n  }),\n);\n\nexport const updateTestinfoAction = createAction(\n  UPDATE_TESTINFO,\n  ({ testinfoId, testName, testCode, testDate }) => ({\n    testinfoId,\n    testName,\n    testCode,\n    testDate,\n  }),\n);\n\nconst updateTestInfoSaga = createRequestSaga(\n  UPDATE_TESTINFO,\n  testinfoAPI.updateTestInfo,\n);\n\nexport function* testinfoUpdateSaga() {\n  yield takeLatest(UPDATE_TESTINFO, updateTestInfoSaga);\n}\n\nconst initialState = {\n  testName: '',\n  testCode: 0,\n  testDate: null,\n  testinfoReceived: null,\n  testinfoError: null,\n};\n\nconst testinfo_update = handleActions(\n  {\n    [INITIALIZE]: state => initialState,\n    [SET_TESTINFO]: (state, { payload: { testinfo_update } }) => ({\n      ...testinfo_update,\n    }),\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\n      ...state,\n      [key]: value,\n    }),\n    [UPDATE_TESTINFO]: state => ({\n      ...state,\n      testinfoReceived: null,\n      testinfoError: null,\n    }),\n    [UPDATE_TESTINFO_SUCCESS]: (state, { payload: testinfoReceived }) => ({\n      ...state,\n      testinfoReceived,\n    }),\n    [UPDATE_TESTINFO_FAILURE]: (state, { payload: testinfoError }) => ({\n      ...state,\n      testinfoError,\n    }),\n  },\n  initialState,\n);\n\nexport default testinfo_update;\n","import React, { useEffect, useCallback } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TestInfoListComponent from '../../components/testinfo/TestInfoListComponent';\nimport { listTestinfo, deleteAllDataAction, generateTestInfo, generateEmptyScoreInfo } from '../../modules/testinfos';\n\nimport {\n  setTestinfo,\n  changeField,\n  initialize,\n  writeTestinfoAction,\n  deleteTestinfoAction,\n} from '../../modules/testinfo';\nimport {\n  initializeUpdateAction,\n  changeUpdateFieldAction,\n  setUpdateTestinfoAction,\n  updateTestinfoAction,\n} from '../../modules/testinfo_update';\n\nconst TestInfoListContainer = ({ location }) => {\n  const dispatch = useDispatch();\n  const {\n    testinfo,\n    testinfos,\n    testinfo_update,\n    error,\n    loading,\n    user,\n    lastGeneratedScore\n  } = useSelector(\n    ({ testinfo, testinfos, testinfo_update, loading, user }) => ({\n      testinfo: testinfo,\n      testinfos: testinfos.testinfos,\n      testinfo_update: testinfo_update,\n      error: testinfos.error,\n      loading: loading['testinfo/LIST_TESTINFO'],\n      user: user.user,\n      lastGeneratedScore: testinfos.score\n    }),\n  );\n\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [\n    dispatch,\n  ]);\n  const onChangeUpdateField = useCallback(\n    payload => dispatch(changeUpdateFieldAction(payload)),\n    [dispatch],\n  );\n  const onSetUpdateInfo = useCallback(\n    payload => {\n      dispatch(setUpdateTestinfoAction(payload));\n    },\n    [dispatch],\n  );\n  const onSetTestInfo = useCallback(\n    payload => {\n      dispatch(setTestinfo(payload));\n    },\n    [dispatch],\n  );\n\n  const onGenerateEmptyScoreInfo = () =>{\n    dispatch(generateEmptyScoreInfo())\n  }\n  const onGenerateTestInfo = () =>{\n    dispatch(generateTestInfo());\n  }\n  const onDeleteAllData = () => {\n    dispatch(deleteAllDataAction());\n  };\n  const onPublish = () => {\n    dispatch(writeTestinfoAction(testinfo));\n  };\n  const onUpdate = () => {\n    const { _id, testName, testCode, testDate } = testinfo_update;\n    dispatch(\n      updateTestinfoAction({ testinfoId: _id, testName, testCode, testDate }),\n    );\n  };\n  const onRemove = testinfoId => {\n    dispatch(deleteTestinfoAction(testinfoId));\n  };\n\n  /**\n   * status 변경은 delete 에서만 사용하는 중\n   */\n  useEffect(() => {\n    const { page } = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n    dispatch(initialize());\n    dispatch(listTestinfo({ page }));\n    if (testinfo.testinfoError) {\n      console.log(testinfo.testinfoError);\n    }\n  }, [\n    location.search,\n    testinfo.testinfoReceived,\n    testinfo.testinfoError,\n    testinfo.status,\n  ]);\n\n  useEffect(() => {\n    if (!testinfo_update.testinfoReceived) {\n      return;\n    }\n    const { page } = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n\n    dispatch(listTestinfo({ page }));\n    if (testinfo_update.testinfoError) {\n      console.log(testinfo_update.testinfoError);\n    }\n  }, [testinfo_update.testinfoReceived, testinfo_update.testinfoError]);\n\n  return (\n    <>\n      <TestInfoListComponent\n        onGenerateEmptyScoreInfo={onGenerateEmptyScoreInfo}\n        onGenerateTestInfo={onGenerateTestInfo}\n        onDeleteAllData={onDeleteAllData}\n        onRemove={onRemove}\n        onPublish={onPublish}\n        onChangeField={onChangeField}\n        loading={loading}\n        error={error}\n        onSetTestInfo={onSetTestInfo}\n        onSetUpdateInfo={onSetUpdateInfo}\n        onUpdate={onUpdate}\n        onChangeUpdateField={onChangeUpdateField}\n        testinfos={testinfos}\n        testinfo_update={testinfo_update}\n        user={user}\n        lastGeneratedScore={lastGeneratedScore}\n      />\n    </>\n  );\n};\n\nexport default withRouter(TestInfoListContainer);\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport TestInfoListContainer from '../containers/testinfo/TestInfoListContainer';\n\nconst TestInfoListPage = () => {\n  return (\n    <>\n      <HeaderContainer />\n      <TestInfoListContainer />\n    </>\n  );\n};\n\nexport default TestInfoListPage;\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport { Link } from 'react-router-dom';\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n        padding:0;\n        margin:0;\n        background: #e9ecef;\n    }\n`;\n\nconst TestInfoListBlock = styled.div`\n  width: 512px;\n  // width 가 주어진 상태에서 좌우 중앙 정렬\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 6rem;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nconst TestInfoListTitle = styled.div`\n  background: #22b8cf;\n  color: white;\n  height: 4rem;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst TestInfoListBody = styled.div`\n  background: white;\n`;\n\nconst TestInfoItemBlock = styled.div`\n  padding: 1rem;\n  display: flex;\n  align-items: center;\n  border-top: 1px solid #dee2e6;\n  background: white;\n  &:nth-child(odd) {\n    background: ${palette.gray[1]};\n  }\n  &:hover {\n    cursor: pointer;\n    background: ${palette.gray[3]};\n  }\n`;\n\nconst TestScoreListComponent = ({ testinfos, error, loading }) => {\n  if (error) {\n    return <TestInfoListBlock>에러가 발생했습니다.</TestInfoListBlock>;\n  }\n\n  return (\n    <>\n      <GlobalStyle />\n      <TestInfoListBlock>\n        <TestInfoListTitle>시험 리스트</TestInfoListTitle>\n\n        {!loading && testinfos && (\n          <div>\n            {testinfos.map((testinfo, index) => (\n              <Link to={`/scoremylist/${testinfo.testName}`} key={index}>\n                <TestInfoItemBlock>{testinfo.testName}</TestInfoItemBlock>\n              </Link>\n            ))}\n          </div>\n        )}\n      </TestInfoListBlock>\n    </>\n  );\n};\n\nexport default TestScoreListComponent;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { listTestinfo } from '../../modules/testinfos';\nimport TestScoreListComponent from '../../components/score/TestScoreListComponent';\nconst TestScoreListContainer = ({ location }) => {\n  const dispatch = useDispatch();\n  const { testinfos, error, loading } = useSelector(\n    ({ testinfos, loading }) => ({\n      testinfos: testinfos.testinfos,\n      error: testinfos.error,\n      loading: loading['testinfo/LIST_TESTINFO'],\n    }),\n  );\n\n  useEffect(() => {\n    const { page } = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n\n    dispatch(listTestinfo({ page }));\n  }, [location.search]);\n\n  return (\n    <TestScoreListComponent\n      testinfos={testinfos}\n      error={error}\n      loading={loading}\n    />\n  );\n};\n\nexport default withRouter(TestScoreListContainer);\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport TestScoreListContainer from '../containers/score/TestScoreListContainer';\nconst TestScoreListPage = () => {\n  return (\n    <>\n      <HeaderContainer />\n      <TestScoreListContainer />\n    </>\n  );\n};\n\nexport default TestScoreListPage;\n","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as scoreAPI from '../lib/api/score';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst INITIALIZE = 'score/INITIALIZE';\nexport const initialize = createAction(INITIALIZE);\n\nconst CHANGE_FILED = 'score/CHANGE_FIELD';\nconst CHANGE_DETAILS = 'score/CHANGE_DETAILS';\nexport const changeDetails = createAction(CHANGE_DETAILS, ({ details }) => ({\n  details,\n}));\n\nconst [\n  UPDATE_SCORE,\n  UPDATE_SCORE_SUCCESS,\n  UPDATE_SCORE_FAILURE,\n] = createRequestActionTypes('score/UPDATE_SCORE');\nexport const update = createAction(UPDATE_SCORE, ({ score }) => ({ score }));\nconst updateSaga = createRequestSaga(UPDATE_SCORE, scoreAPI.update);\n\nconst [\n  READ_SCORE,\n  READ_SCORE_SUCCESS,\n  READ_SCORE_FAILURE,\n] = createRequestActionTypes('score/READ_SCORE');\n\nconst [\n  READ_PREV_SCORE,\n  READ_PREV_SCORE_SUCCESS,\n  READ_PREV_SCORE_FAILURE,\n] = createRequestActionTypes('score/READ_PREV_SCORE');\n\nconst UNLOAD_SCORE = 'score/UNLOAD_SCORE';\n\nexport const changeField = createAction(CHANGE_FILED, ({ key, value }) => ({\n  key,\n  value,\n}));\nexport const readScore = createAction(READ_SCORE);\nexport const unloadScore = createAction(UNLOAD_SCORE);\nconst readScoreSaga = createRequestSaga(READ_SCORE, scoreAPI.read);\n\nexport const readPrevScore = createAction(READ_PREV_SCORE);\nconst readPrevScoreSaga = createRequestSaga(READ_PREV_SCORE, scoreAPI.prev);\nexport function* scoreSaga() {\n  yield takeLatest(READ_SCORE, readScoreSaga);\n  yield takeLatest(READ_PREV_SCORE, readPrevScoreSaga);\n  yield takeLatest(UPDATE_SCORE, updateSaga);\n}\n\nconst initialState = {\n  score: null,\n  scoreReceived: null,\n  error: null,\n  doneCount: 0,\n};\n\nconst score = handleActions(\n  {\n    [INITIALIZE]: state => initialState,\n    [CHANGE_DETAILS]: (state, { payload: details }) => ({\n      ...state,\n      score: {\n        ...state.score,\n        details: details.details,\n      },\n    }),\n    [CHANGE_FILED]: (state, { payload: { key, value } }) => ({\n      ...state,\n      score: {\n        ...state.score,\n        [key]: value,\n      },\n    }),\n    [READ_SCORE_SUCCESS]: (state, { payload: score, meta: response }) => ({\n      ...state,\n      score,\n      scoreReceived: null,\n      doneCount: parseInt(response.headers['done-count'], 0),\n    }),\n    [READ_SCORE_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n      scoreReceived: null,\n    }),\n    [READ_PREV_SCORE_SUCCESS]: (state, { payload: score }) => ({\n      ...state,\n      score,\n      scoreReceived: null,\n    }),\n    [READ_PREV_SCORE_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n      scoreReceived: null,\n    }),\n    [UPDATE_SCORE]: state => ({\n      ...state,\n\n      error: null,\n    }),\n    [UPDATE_SCORE_SUCCESS]: (state, { payload: scoreReceived }) => ({\n      ...state,\n      scoreReceived,\n      error: null,\n    }),\n    [UPDATE_SCORE_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      scoreReceived: null,\n      error,\n    }),\n    [UNLOAD_SCORE]: () => initialState,\n  },\n  initialState,\n);\n\nexport default score;\n","import client from './client';\nimport qs from 'qs';\n\nexport const read = payload => {\n  const { testName, scoreId, questionNo } = payload;\n  var path = `/api/score/score/${testName}`;\n  if (scoreId || questionNo) {\n    const queryString = qs.stringify({ scoreId, questionNo });\n    path = path + `?${queryString}`;\n  }\n\n  return client.get(path);\n};\n\nexport const update = score => {\n  console.log('update score test', score);\n\n  return client.patch(`/api/score/${score.score._id}`, {\n    question: score.score.question,\n    details: score.score.details,\n    state: 2,\n  });\n  // .then(response => {\n  //   if (response) {\n  //     if (response.status != 202) {\n  //       // 알람 창 띄우기\n  //       console.log(response);\n  //     }\n  //   }\n  // })\n  // .catch(error => {\n  //   alert(error.response.statusText);\n\n  //   if (error) {\n  //     if (error.response.status != 202) {\n  //       // 알람 창 띄우기\n  //       console.log(error.response);\n  //     }\n  //   }\n  // });\n};\n\nexport const list = payload => {\n  const queryString = qs.stringify({\n    userId: payload.userId,\n    page: payload.page,\n    testName: payload.testName,\n    scoreAuth: payload.scoreAuth,\n    questionNo: payload.questionNo,\n  });\n  return client.get(`/api/score?${queryString}`);\n};\n\nexport const prev = score => {\n  return client.get(`/api/score/prev/${score.score._id}`);\n};\n","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport Button from '../common/Button';\nimport palette from '../../lib/styles/palette';\nimport ScrollContainer from 'react-indiana-drag-scroll'\n\nconst FullScreen = styled.div`\n  position: fixed;\n  z-index: 30;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.25);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Container = styled.div`\n  width: 90%;\n  height: 90%;\n  display: flex;\n  background: ${palette.gray[1]};\n  overflow: none;\n`;\n\nconst Section = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n`;\n\nconst ButtonHolder = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin: 1rem;\n`;\n\nconst AreaWrapper = styled.div`\n  position: relative;\n  overflow: auto;\n  min-height: 4rem;\n`;\nconst ImgWrapper = styled.div`\n  position: relative;\n  overflow: auto;\n`;\n\nconst Img = styled.img`\n  object-fit: none;\n`;\n\nconst AskFullScreenImgViewerModal = ({\n  visible,\n  imgPath,\n  xPos,\n  yPos,\n  onConfirm,\n}) => {\n  const imgEl = useRef(null);\n  if (!visible) return null;\n  const onImageLoad = () => {\n    console.log('img loaded');\n  };\n\n  return (\n    <FullScreen>\n      <Container>\n        <Section>\n          <ButtonHolder>\n            <Button onClick={onConfirm}>닫기</Button>\n          </ButtonHolder>\n          <ScrollContainer className=\"scroll-container\" hideScrollbars={false}>\n            <AreaWrapper>\n              <ImgWrapper>\n                <Img onLoad={onImageLoad} ref={imgEl} src={imgPath} />\n              </ImgWrapper>\n            </AreaWrapper>\n          </ScrollContainer>\n        </Section>\n      </Container>\n    </FullScreen>\n  );\n};\n\nexport default AskFullScreenImgViewerModal;\n","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\n\nconst CriteriaItemBlock = styled.div`\n  padding: 1rem;\n  border-top: 1px solid ${palette.gray[3]};\n  background: ${palette.gray[1]};\n  &:hover {\n    background: ${palette.cyan[1]};\n  }\n`;\n\nconst ScoreCriteriaItem = ({ detail, onChangeItem }) => {\n  const inputRef = useRef(null);\n\n  const onItemClick = () => {\n    const toggleValue = !inputRef.current.checked;\n    inputRef.current.checked = toggleValue;\n    var changeDetail = detail;\n    changeDetail.correct = toggleValue;\n\n    onChangeItem(changeDetail);\n  };\n\n  const onChange = e => {\n    console.log('onChange', e.target);\n    const toggleValue = !e.target.checked;\n    console.log('toggle', toggleValue);\n    inputRef.current.checked = toggleValue;\n    var changeDetail = detail;\n    changeDetail.correct = toggleValue;\n\n    onChangeItem(changeDetail);\n  };\n\n  return (\n    <CriteriaItemBlock onClick={onItemClick}>\n      <input\n        ref={inputRef}\n        type=\"checkbox\"\n        checked={detail.correct}\n        onChange={onChange}\n      />\n      {detail.criteria}\n    </CriteriaItemBlock>\n  );\n};\n\nexport default ScoreCriteriaItem;\n","import React, { useState, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/styles/palette';\nimport AskFullScreenImgViewerModal from './AskFullScreenImgViewerModal';\nimport ScoreCriteriaItem from './ScoreCriteriaItem';\nimport AskModal from '../common/AskModal';\nimport { MdNavigateBefore, MdNavigateNext, MdHome } from 'react-icons/md';\nimport { Link } from 'react-router-dom';\n\nimport Viewer from 'react-viewer';\n\nimport { useBeforeunload } from 'react-beforeunload';\n\nconst ScoreComponentBlock = styled(Responsive)`\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  overflow: none;\n`;\n\nconst QuestionWrapper = styled.div`\n  padding: 0.5rem;\n  width: 640px;\n  display: flex;\n  flex-direction: column;\n  background: ${palette.gray[2]};\n`;\n\nconst TitleBlock = styled.span`\n  font-size: 2.5rem;\n`;\n\nconst ButtonHolder = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin: 1rem;\n`;\n\nconst ImgBlock = styled.img`\n  object-fit: none;\n  ${props =>\n    css`\n      object-position: -${props.xPos}px -${props.yPos}px;\n    `}\n`;\n\nconst ScoreStateBlock = styled.h3`\n${props =>\n  props.done &&\n  css`\n    color: red;\n  `}\n`\n\nconst InputBlock = styled.input`\n  font-size: 0.75rem;\n  padding: 0.25rem;\n  margin: 0.25rem;\n  width: 75px;\n`;\n\nconst CriteriaWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst EmptyScoreBlock = styled.div`\n  text-align: center;\n`;\n\nconst StatusBlock = styled.div`\n  justify-content: space-around;\n  display: flex;\n`;\n\nconst NavigationButtonsBlock = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst NaviButton = styled(Button)`\n  flex: 1;\n  font-size: 1.75rem;\n\n  & + & {\n    margin-left: 0.75rem;\n  }\n`;\n\nconst SubmitButton = styled(NaviButton)`\n  flex: 4;\n  margin-right: 0.75rem;\n`;\n\nconst LocalNavBar = styled.div`\n  margin-top: 8px;\n  margin-bottom: 4px;\n  border-radius: 4px;\n  height: 2.75rem;\n  display: flex;\n  justify-content: space-between;\n  background: ${palette.gray[2]};\n`;\n\nconst BreadCrumb = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst BreadCrumbItem = styled.div`\n  font-size: 1.15rem;\n  font-weight: bold;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  color: ${palette.cyan[6]};\n  &:hover {\n    cursor: pointer;\n    color: ${palette.cyan[9]};\n  }\n`;\nconst BreadCrumbHomeItem = styled(BreadCrumbItem)`\n  font-size: 1.5rem;\n`;\nconst BreadCrumbItemSeperator = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n`;\n\nconst ProgressDiv = styled.div`\n  margin-right: 8px;\n  align-items: center;\n  display: flex;\n  font-size: 1.125rem;\n  font-weight: 500;\n  letter-spacing: 2px;\n`;\n\nconst ScoreComponent = ({\n  user,\n  testName,\n  score,\n  scoreReceived,\n  liveDoneCount,\n  doneCount,\n  totalCount,\n  error,\n  loading,\n  onSubmit,\n  onChangeDetails,\n  onMoveNextScore,\n  onMovePrevScore,\n  onMoveListScore,\n}) => {\n  const [xOffset, setXOffset] = useState(0);\n  const [yOffset, setYOffset] = useState(0);\n  const [modal, setModal] = useState(false);\n  const [onLeaveToNextModal, setOnLeaveToNextModal] = useState(false);\n  const [onLeaveToPrevModal, setOnLeaveToPrevModal] = useState(false);\n  const [errorModal, setErrorModal] = useState(false);\n  const errorMsg = useRef('');\n\n  if (error) {\n    if (error.response && error.response.status === 404) {\n      return (\n        <EmptyScoreBlock>\n          <h1>채점할 문제가 없습니다.</h1>\n        </EmptyScoreBlock>\n      );\n    } else {\n      console.log('error222', error);\n      errorMsg.current = '에러가 발생하였습니다.';\n      setErrorModal(true);\n    }\n  }\n\n  if (!score) {\n    return <div>...</div>;\n  }\n\n  const onMoveNextClick = () => {\n    if (score.state === 2 || scoreReceived) {\n      onMoveNextScore();\n    } else {\n      setOnLeaveToNextModal(true);\n    }\n  };\n\n  const onMoveNextScoreConfirmClick = () => {\n    onMoveNextScore();\n    onMoveDismiss();\n  };\n\n  const onMovePrevScoreConfirmClick = () => {\n    onMovePrevScore();\n    onMoveDismiss();\n  };\n\n  const onMoveListScoreConfirmClick = () => {\n    onMoveListScore();\n    onMoveDismiss();\n  };\n\n  const onMoveDismiss = () => {\n    setOnLeaveToNextModal(false);\n    setOnLeaveToPrevModal(false);\n    setErrorModal(false);\n  };\n\n  const onMovePrevClick = () => {\n    if (score.state === 2 || scoreReceived) {\n      onMovePrevScore();\n    } else {\n      setOnLeaveToPrevModal(true);\n    }\n  };\n\n  const onFullScreenClick = () => {\n    setModal(true);\n  };\n\n  const onChangeXOffset = e => {\n    const value = parseInt(e.target.value);\n    const offset = value ? value : 0;\n    setXOffset(offset);\n  };\n  const onChangeYOffset = e => {\n    const value = parseInt(e.target.value);\n    const offset = value ? value : 0;\n    setYOffset(offset);\n  };\n\n  const onChangeItem = changeDetail => {\n    const { details } = score;\n    var _details = [];\n    for (const detail of details) {\n      if (detail._id === changeDetail._id) {\n        _details.push({ ...changeDetail });\n      } else {\n        _details.push({ ...detail });\n      }\n    }\n    onChangeDetails({ details: _details });\n  };\n\n  const getCurrentPoint = () => {\n    var correctPoint = 0;\n    for (const detail of score.details) {\n      console.log(detail);\n      if (detail.correct) {\n        correctPoint += detail.point;\n      }\n    }\n    return correctPoint;\n  };\n\n  const getCurrentStateString = () => {\n    if (score) {\n      if (score.state === 2) {\n        return '채점 완료';\n      }\n    }\n    if (scoreReceived) {\n      return '채점 완료';\n    }\n\n    return '미 채점';\n  };\n\n  const { testPaperNo, questionNo } = score.question;\n  const { imgFileName, xPos, yPos, width, height } = score.question.area;\n\n  const imgPath = `/answer/${testName}_분류/${testPaperNo}/${imgFileName}`;\n\n  const scoreMyListPath = `/scoremylist/${testName}`;\n  const scoredListPath = `/scoredlist/?testName=${testName}&scoreAuth=${user.username}&questionNo=${questionNo}`;\n\n  console.log(liveDoneCount);\n  const onConfirm = () => {\n    setModal(false);\n  };\n\n  if(loading) \n    return null;\n\n  return (\n    <>\n      <ScoreComponentBlock>\n        <LocalNavBar>\n          <BreadCrumb>\n            <BreadCrumbHomeItem>\n              <Link to=\"/testscorelist\">\n                <MdHome />\n              </Link>\n            </BreadCrumbHomeItem>\n            <BreadCrumbItemSeperator>/</BreadCrumbItemSeperator>\n            <BreadCrumbItem>\n              <Link to={scoreMyListPath}>{testName}</Link>\n            </BreadCrumbItem>\n            <BreadCrumbItemSeperator>/</BreadCrumbItemSeperator>\n            <BreadCrumbItem>\n              <Link to={scoredListPath}>{questionNo}</Link>\n            </BreadCrumbItem>\n          </BreadCrumb>\n          <ProgressDiv>\n              {liveDoneCount == 0 ? doneCount : liveDoneCount} / {totalCount}\n          </ProgressDiv>\n        </LocalNavBar>\n\n        <Container>\n          <QuestionWrapper>\n            <TitleBlock>{questionNo}번 답안영역</TitleBlock>\n            <h4>문제지 번호 : {testPaperNo}</h4>\n            <ButtonHolder>\n              {/* <div>x : </div>\n              <InputBlock type=\"text\" onChange={onChangeXOffset} />\n              <div>y : </div>\n              <InputBlock type=\"text\" onChange={onChangeYOffset} /> */}\n              <Button onClick={onFullScreenClick}>이미지 확대</Button>\n            </ButtonHolder>\n            <ImgBlock\n              src={imgPath}\n              width={width}\n              height={height}\n              xPos={xPos + xOffset}\n              yPos={yPos + yOffset}\n            />\n          </QuestionWrapper>\n\n          <CriteriaWrapper>\n            {score.details.map(detail => (\n              <ScoreCriteriaItem\n                key={detail._id}\n                detail={detail}\n                onChangeItem={onChangeItem}\n              />\n            ))}\n\n            <StatusBlock>\n              <ScoreStateBlock done={score.state === 2 || scoreReceived}>상태 : {getCurrentStateString()}</ScoreStateBlock>\n              <h3>점수 : {getCurrentPoint()}</h3>\n            </StatusBlock>\n            <NavigationButtonsBlock>\n              <NaviButton big onClick={onMovePrevClick}>\n                <MdNavigateBefore />\n              </NaviButton>\n              <SubmitButton cyan big onClick={onSubmit}>\n                답안 채점\n              </SubmitButton>\n              <NaviButton big onClick={onMoveNextClick}>\n                <MdNavigateNext />\n              </NaviButton>\n            </NavigationButtonsBlock>\n          </CriteriaWrapper>\n        </Container>\n      </ScoreComponentBlock>\n      {/* <AskFullScreenImgViewerModal\n        visible={modal}\n        onConfirm={onConfirm}\n        imgPath={imgPath}\n      /> */}\n      <Viewer \n        visible={modal}\n        onClose={onConfirm}\n        images={[{src: imgPath, alt: ''}]}\n\n      />\n      <AskModal\n        title={'미채점 상태 입니다.'}\n        description={'다음 채점 항목으로 이동하시겠습니까?'}\n        visible={onLeaveToNextModal}\n        onConfirm={onMoveNextScoreConfirmClick}\n        onCancel={onMoveDismiss}\n      />\n      <AskModal\n        title={'미채점 상태 입니다.'}\n        description={'이전 채점 항목으로 이동하시겠습니까?'}\n        visible={onLeaveToPrevModal}\n        onConfirm={onMovePrevScoreConfirmClick}\n        onCancel={onMoveDismiss}\n      />\n      <AskModal\n        title={'오류가 발생하였습니다.'}\n        visible={errorModal}\n        description={errorMsg.current}\n        onConfirm={onMoveDismiss}\n        showCancel={false}\n      />\n    </>\n  );\n};\n\nexport default ScoreComponent;\n","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  initialize,\n  readScore,\n  unloadScore,\n  changeDetails,\n  update,\n} from '../../modules/score';\nimport ScoreComponent from '../../components/score/ScoreComponent';\nimport * as scoreAPI from '../../lib/api/score';\n\nconst ScoreContainer = ({ match }) => {\n  const { testName } = match.params;\n\n  const dispatch = useDispatch();\n  const { score, scoreReceived, error, loading } = useSelector(\n    ({ score, loading }) => ({\n      score: score.score,\n      scoreReceived: score.scoreReceived,\n      error: score.error,\n      loading: loading['score/READ_SCORE'],\n    }),\n  );\n\n  useEffect(() => {\n    dispatch(readScore({ testName }));\n  }, [dispatch]);\n\n  useEffect(() => {}, [scoreReceived]);\n\n  useEffect(() => {}, [error]);\n\n  useEffect(() => {\n    dispatch(initialize());\n    return () => {\n      dispatch(unloadScore());\n    };\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    onUpdate({ ...score, state: 2 });\n    // scoreAPI.update({ ...score, state: 2 });\n  };\n\n  const onMoveNextScore = () => {\n    alert('todo: onMoveNext');\n  };\n\n  const onMovePrevScore = () => {\n    alert('todo: onMovePrev');\n  };\n\n  const onMoveListScore = () => {\n    alert('todo : onMoveList');\n  };\n  const onChangeDetails = useCallback(\n    payload => dispatch(changeDetails(payload)),\n    [dispatch],\n  );\n\n  const onUpdate = useCallback(\n    payload => {\n      dispatch(update({ score: payload }));\n    },\n    [dispatch],\n  );\n\n  return (\n    <ScoreComponent\n      score={score}\n      error={error}\n      loading={loading}\n      onSubmit={onSubmit}\n      onChangeDetails={onChangeDetails}\n      onChangeDetails={onChangeDetails}\n      onMoveNextScore={onMoveNextScore}\n      onMovePrevScore={onMovePrevScore}\n      onMoveListScore={onMoveListScore}\n    />\n  );\n};\n\nexport default withRouter(ScoreContainer);\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport ScoreContainer from '../containers/score/ScoreContainer';\n\nconst ScorePage = () => {\n  return (\n    <div>\n      <HeaderContainer />\n      <ScoreContainer />\n    </div>\n  );\n};\n\nexport default ScorePage;\n","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport { takeLatest } from 'redux-saga/effects';\nimport * as scoresAPI from '../lib/api/score';\n\nconst INITIALIZE_LIST = 'scores/INITIALIZE_LIST';\nconst CHANGE_SCORES = 'scores/CHANGE_SCORES';\nexport const initializeList = createAction(INITIALIZE_LIST);\nexport const changeScore = createAction(CHANGE_SCORES, ({ scores }) => ({\n  scores,\n}));\n\nconst [\n  LIST_SCORE,\n  LIST_SCORE_SUCCESS,\n  LIST_SCORE_FAILURE,\n] = createRequestActionTypes('criteria/LIST_SCORE');\n\nexport const listScores = createAction(LIST_SCORE, payload => payload);\n\nconst listScoreSaga = createRequestSaga(LIST_SCORE, scoresAPI.list);\n\nexport function* scoreListSaga() {\n  yield takeLatest(LIST_SCORE, listScoreSaga);\n}\n\nconst initialState = {\n  scores: null,\n  error: null,\n  lastPage: 1,\n  notProcessedCount: 0,\n  processCount: 0,\n  doneCount: 0,\n};\n\nconst scores = handleActions(\n  {\n    [INITIALIZE_LIST]: state => initialState,\n    [LIST_SCORE_SUCCESS]: (state, { payload: scores, meta: response }) => ({\n      ...state,\n      scores,\n      lastPage: parseInt(response.headers['last-page'], 10),\n      notProcessedCount: parseInt(response.headers['not-processed'], 0),\n      processCount: parseInt(response.headers['process'], 0),\n      doneCount: parseInt(response.headers['done'], 0),\n    }),\n    [LIST_SCORE_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n    [CHANGE_SCORES]: (state, { payload: scores }) => ({\n      ...state,\n      scores: scores.scores,\n    }),\n  },\n  initialState,\n);\n\nexport default scores;\n","import styled, { css } from 'styled-components';\nimport palette from '../../../lib/styles/palette';\nimport Responsive from '../../common/Responsive';\n\nexport const ScoreListWrapper = styled(Responsive)`\n  margin-top: 1rem;\n`;\nexport const QuestionNoBlock = styled.div`\n  width: 100px;\n`;\nexport const TestNameBlock = styled.div`\n  width: 100px;\n`;\nexport const QuestionStateBlock = styled.div`\n  width: 70px;\n`;\nexport const CriteriasBlock = styled.div`\n  flex: 1;\n  text-overflow: ellipsis;\n`;\n\nexport const ScoredItemBlock = styled.div`\n  display: flex;\n  padding: 0.5rem;\n  border-top: 1px solid ${palette.gray[3]};\n  &:hover {\n    cursor: pointer;\n    background: ${palette.cyan[2]};\n  }\n  ${props =>\n    props.done &&\n    css`\n      background: ${palette.gray[3]};\n    `}\n\n  /* ${props =>\n    props.active &&\n    css`\n      background: ${palette.cyan[1]};\n    `} */\n\n    ${props =>\n      props.process &&\n      css`\n        background: #ffffe0;\n      `}\n      \n      ${props =>\n        props.before &&\n        css`\n          background: #ffe5e5;\n        `}\n      \n`;\n","import React from 'react';\nimport {\n  ScoredItemBlock,\n  QuestionNoBlock,\n  TestNameBlock,\n  QuestionStateBlock,\n  CriteriasBlock,\n} from './Common/ScoreBlocks';\nimport { Link } from 'react-router-dom';\nimport qs from 'qs';\n\nconst ScoreItemComponent = ({ score, onReadScoreData }) => {\n  // const onItemClick = () => {\n  //   // onReadScoreData({ testName: score.question.testName, scoreId: score._id });\n\n  // };\n\n  const { testName } = score.question;\n  const scoreId = score._id;\n  const linkPath = `/scoreEditPage/?${qs.stringify({ testName, scoreId })}`;\n\n  const getStateString = score => {\n    if (score.state === 0) {\n      return '처리전';\n    } else if (score.state === 1) {\n      return '처리중';\n    } else if (score.state === 2) {\n      return '처리완료';\n    }\n  };\n\n  const getCriteriaStrings = score => {\n    var res = '';\n    for (const detail of score.details) {\n      res += detail.criteria + ' / ';\n    }\n    return res;\n  };\n  return (\n    <>\n      <Link to={linkPath}>\n        <ScoredItemBlock\n          before={score.state === 0}\n          process={score.state === 1}\n          done={score.state === 2}\n        >\n          <QuestionNoBlock>{score.question.questionNo}</QuestionNoBlock>\n          <TestNameBlock>{score.question.testPaperNo}</TestNameBlock>\n          <QuestionStateBlock>{getStateString(score)}</QuestionStateBlock>\n          <CriteriasBlock>{getCriteriaStrings(score)}</CriteriasBlock>\n        </ScoredItemBlock>\n      </Link>\n    </>\n  );\n};\n\nexport default ScoreItemComponent;\n","import React from 'react';\nimport ScoreItemComponent from './ScoreItemComponent';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport { Link } from 'react-router-dom';\nimport { MdHome } from 'react-icons/md';\n\nimport {\n  ScoredItemBlock,\n  QuestionNoBlock,\n  TestNameBlock,\n  QuestionStateBlock,\n  CriteriasBlock,\n  ScoreListWrapper,\n} from './Common/ScoreBlocks';\n\nconst ProgressDiv = styled.div`\n  margin: 8px;\n  align-items: center;\n  display: flex;\n  font-size: 1.125rem;\n  font-weight: 500;\n  letter-spacing: 2px;\n`;\n\nconst LocalNavBar = styled.div`\n  margin-top: 8px;\n  margin-bottom: 4px;\n  border-radius: 4px;\n  height: 2.75rem;\n  display: flex;\n  justify-content: space-between;\n  background: ${palette.gray[2]};\n`;\n\nconst BreadCrumb = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst BreadCrumbItem = styled.div`\n  font-size: 1.15rem;\n  font-weight: bold;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  color: ${palette.cyan[6]};\n  &:hover {\n    cursor: pointer;\n    color: ${palette.cyan[9]};\n  }\n`;\nconst BreadCrumbHomeItem = styled(BreadCrumbItem)`\n  font-size: 1.5rem;\n`;\nconst BreadCrumbItemSeperator = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n`;\n\nconst ScoredListComponent = ({\n  testName,\n  scores,\n  onReadScoreData,\n  notProcessedCount,\n  processCount,\n  doneCount,\n}) => {\n  const scoreMyListPath = `/scoremylist/${testName}`;\n\n  var strCount = '';\n  if (notProcessedCount) {\n    strCount =\n      '총 문제수 : ' +\n      (doneCount + processCount + notProcessedCount) +\n      ' / 처리완료 : ' +\n      doneCount +\n      ' / 처리중 : ' +\n      processCount +\n      ' / 미처리 : ' +\n      notProcessedCount;\n  }\n  return (\n    <ScoreListWrapper>\n      <LocalNavBar>\n          <BreadCrumb>\n            <BreadCrumbHomeItem>\n              <Link to=\"/testscorelist\">\n                <MdHome />\n              </Link>\n            </BreadCrumbHomeItem>\n            <BreadCrumbItemSeperator>/</BreadCrumbItemSeperator>\n            <BreadCrumbItem>\n              <Link to={scoreMyListPath}>{testName}</Link>\n            </BreadCrumbItem>\n          </BreadCrumb>\n        </LocalNavBar>\n\n      <ProgressDiv>{strCount}</ProgressDiv>\n      <ScoredItemBlock done>\n        <QuestionNoBlock>문제번호</QuestionNoBlock>\n        <TestNameBlock>문제지번호</TestNameBlock>\n        <QuestionStateBlock>상태</QuestionStateBlock>\n        <CriteriasBlock>채점기준</CriteriasBlock>\n      </ScoredItemBlock>\n      {scores &&\n        scores.map(score => (\n          <ScoreItemComponent\n            key={score._id}\n            score={score}\n            onReadScoreData={onReadScoreData}\n          />\n        ))}\n    </ScoreListWrapper>\n  );\n};\n\nexport default ScoredListComponent;\n","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport score, { initialize, readScore } from '../../modules/score';\nimport { withRouter } from 'react-router-dom';\nimport { initializeList, listScores } from '../../modules/scores';\nimport ScoredListComponent from '../../components/score/ScoredListComponent';\nimport qs from 'qs';\n\nconst ScoredListContainer = ({ location }) => {\n  const dispatch = useDispatch();\n  const {\n    scores,\n    error,\n    loading,\n    notProcessedCount,\n    processCount,\n    doneCount,\n    user,\n  } = useSelector(({ scores, loading, user }) => ({\n    scores: scores.scores,\n    error: scores.error,\n    notProcessedCount: scores.notProcessedCount,\n    processCount: scores.processCount,\n    doneCount: scores.doneCount,\n    loading: loading['scores/LIST_SCORE'],\n    user: user.user,\n  }));\n\n  const { page, testName, scoreAuth, questionNo } = qs.parse(\n    location.search,\n    {\n      ignoreQueryPrefix: true,\n    },\n  );\n  \n  useEffect(() => {\n    dispatch(initialize());\n    dispatch(initializeList());\n  }, []);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [scores]);\n\n  useEffect(\n    () => {\n      // const { page, testName, scoreAuth, questionNo } = qs.parse(\n      //   location.search,\n      //   {\n      //     ignoreQueryPrefix: true,\n      //   },\n      // );\n\n      if (scoreAuth) {\n        console.log('12', scoreAuth, questionNo);\n        dispatch(\n          listScores({\n            page,\n            testName,\n            scoreAuth,\n            questionNo,\n          }),\n        );\n      } else {\n        dispatch(\n          listScores({\n            userId: user._id, //\n            page,\n            testName,\n          }),\n        );\n      }\n    },\n    [location.search],\n    [user],\n  );\n\n  const onReadScoreData = useCallback(payload => dispatch(readScore(payload)), [\n    dispatch,\n  ]);\n\n  return (\n    <ScoredListComponent\n      testName={testName}\n      scores={scores}\n      onReadScoreData={onReadScoreData}\n      notProcessedCount={notProcessedCount}\n      processCount={processCount}\n      doneCount={doneCount}\n    />\n  );\n};\n\nexport default withRouter(ScoredListContainer);\n","import React from 'react';\nimport styled from 'styled-components';\nimport qs from 'qs';\nimport Button from '../common/Button';\n\nconst PaginationBlock = styled.div`\n  width: 360px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 3rem;\n  margin-top: 3rem;\n`;\n\nconst PaginationBlockLarge = styled(PaginationBlock)`\n  width: 720px;\n`;\n\nconst PageNumber = styled.div`\n  &:hover {\n    cursor: pointer;\n    color: #ff8787;\n  }\n`;\n\nconst PageButton = styled(Button)`\n  min-width: 72px;\n`;\n\nconst buildLink = ({ search, page }) => {\n  const res = qs.parse(search, {\n    ignoreQueryPrefix: true,\n  });\n\n  const queryobj = {\n    ...res,\n    page,\n  };\n\n  const query = qs.stringify(queryobj);\n  return `/scoredList?${query}`;\n};\n\nconst pushItem = (page, search, index) => {\n  if (page === index) {\n    return <PageButton disabled>{index}</PageButton>;\n  } else {\n    return (\n      <PageButton to={buildLink({ search, page: index })}>{index}</PageButton>\n    );\n  }\n};\n\nconst Pagination = ({ page, lastPage, search }) => {\n  const length = 6;\n  const center = 3;\n\n  let pageItems = [];\n  if (lastPage <= length) {\n    for (var i = 1; i <= lastPage; i++) {\n      pageItems.push(pushItem(page, search, i));\n    }\n  } else {\n    const startIndex_ = page - center;\n    const startIndex = startIndex_ < 1 ? 1 : startIndex_;\n    const endIndex_ = startIndex + length;\n    const endIndex = endIndex_ < lastPage ? endIndex_ : lastPage;\n\n    pageItems.push(\n      <PageButton to={buildLink({ search, page: 1 })}>처음(1)</PageButton>,\n    );\n    pageItems.push(<span> ... </span>);\n\n    for (var i = startIndex; i <= endIndex; i++) {\n      pageItems.push(pushItem(page, search, i));\n    }\n\n    pageItems.push(<span> ... </span>);\n    pageItems.push(\n      <PageButton to={buildLink({ search, page: lastPage })}>\n        끝({lastPage})\n      </PageButton>,\n    );\n  }\n\n  /**\n   * return props.to ? (\n    <StyledLink {...props} cyan={props.cyan ? 1 : 0} big={props.big ? 1 : 0} />\n  ) : (\n    <StyledButton {...props} />\n  );\n   */\n  return lastPage <= length ? (\n    <PaginationBlock>{pageItems}</PaginationBlock>\n  ) : (\n    <PaginationBlockLarge>{pageItems}</PaginationBlockLarge>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport Pagination from '../../components/score/Pagination';\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport qs from 'qs';\n\nconst PaginationContainer = ({ location }) => {\n  const { lastPage, scores, loading } = useSelector(({ scores, loading }) => ({\n    lastPage: scores.lastPage,\n    scores: scores.scores,\n    loading: loading['scores/LIST_SCORE'],\n  }));\n\n  // 데이터가 없거나 로딩 중이면 아무것도 보여주지 않음\n  if (!scores || loading) return null;\n\n  // page 가 없으면 1을 기본값으로 사용\n  const { page = 1 } = qs.parse(location.search, {\n    ignoreQueryPrefix: true,\n  });\n\n  return (\n    <Pagination\n      page={parseInt(page, 10)}\n      lastPage={lastPage}\n      search={location.search}\n    />\n  );\n};\n\nexport default withRouter(PaginationContainer);\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport ScoredListContainer from '../containers/score/ScoredListContainer';\nimport PaginationContainer from '../containers/score/PaginationContainer';\n\nconst ScoredListPage = () => {\n  return (\n    <div>\n      <HeaderContainer />\n      <ScoredListContainer />\n      <PaginationContainer />\n    </div>\n  );\n};\n\nexport default ScoredListPage;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  initialize,\n  readScore,\n  readPrevScore,\n  unloadScore,\n  changeDetails,\n  update,\n} from '../../modules/score';\nimport ScoreComponent from '../../components/score/ScoreComponent';\n\nimport qs from 'qs';\n\nconst ScoreEditContainer = ({ location }) => {\n  const {\n    score,\n    scoreReceived,\n    liveDoneCount,\n    doneCount,\n    notProcessedCount,\n    processCount,\n    error,\n    loading,\n    user,\n  } = useSelector(({ score, loading, user, scores }) => ({\n    score: score.score,\n    scoreReceived: score.scoreReceived,\n    liveDoneCount: score.doneCount,\n    doneCount: scores.doneCount,\n    notProcessedCount: scores.notProcessedCount,\n    processCount: scores.processCount,\n    error: score.error,\n    loading: loading['score/READ_SCORE'],\n    user: user.user,\n  }));\n\n  const { testName, scoreId } = qs.parse(location.search, {\n    ignoreQueryPrefix: true,\n  });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(readScore({ testName, scoreId }));\n  }, [location.search]);\n\n  useEffect(() => {\n    dispatch(initialize());\n    return () => {\n      dispatch(unloadScore());\n    };\n  }, []);\n\n  // useEffect(() => {\n  //   if (scoreReceived) {\n  //     //history.goBack();\n  //     // todo : 채점 완료 표시하기\n  //   }\n  // }, [scoreReceived]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log('update', score);\n    if (score) {\n      // alert 라도???\n      onUpdate({ ...score, state: 2 });\n    }\n\n    // scoreAPI.update({ score: e });\n  };\n\n  const onMoveNextScore = () => {\n    const questionNo = score.question.questionNo\n    dispatch(readScore({ testName, questionNo }));\n  };\n\n  const onMovePrevScore = () => {\n    dispatch(readPrevScore({ score }));\n  };\n\n  const onMoveListScore = () => {\n    alert('todo : move list');\n  };\n  const onChangeDetails = useCallback(\n    payload => dispatch(changeDetails(payload)),\n    [dispatch],\n  );\n\n  const onUpdate = useCallback(\n    payload => {\n      dispatch(update({ score: payload }));\n    },\n    [dispatch],\n  );\n\n  return (\n    <ScoreComponent\n      user={user}\n      testName={testName}\n      score={score}\n      error={error}\n      scoreReceived={scoreReceived}\n      liveDoneCount={liveDoneCount}\n      doneCount={doneCount}\n      totalCount={doneCount + notProcessedCount + processCount}\n      loading={loading}\n      onSubmit={onSubmit}\n      onChangeDetails={onChangeDetails}\n      onMoveNextScore={onMoveNextScore}\n      onMovePrevScore={onMovePrevScore}\n      onMoveListScore={onMoveListScore}\n    />\n  );\n};\n\nexport default withRouter(ScoreEditContainer);\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport ScoreEditContainer from '../containers/score/ScoreEditContainer';\n\nconst ScoreEditPage = () => {\n  return (\n    <div>\n      <HeaderContainer />\n      <ScoreEditContainer />\n    </div>\n  );\n};\n\nexport default ScoreEditPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\n\nconst FullScreen = styled.div`\n  position: fixed;\n  z-index: 30;\n  top: 4rem;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* background: rgba(0, 0, 0, 0.25); */\n  background: ${palette.gray[9]};\n`;\nconst MenuWrapper = styled.div`\n  width: 512px;\n  // width 가 주어진 상태에서 좌우 중앙 정렬\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: -12rem;\n  overflow: hidden;\n`;\nconst MenuItem = styled.div`\n  font-size: 3rem;\n  font-weight: bold;\n  letter-spacing: 5px;\n  margin-bottom: 0.5rem;\n  color: ${palette.gray[4]};\n  &:hover {\n    cursor: pointer;\n    color: ${palette.cyan[6]};\n  }\n`;\nconst StartAdminPageComponent = () => {\n  return (\n    <FullScreen>\n      <MenuWrapper>\n        <Link to=\"/testlist\">\n          <MenuItem>채점기준 관리</MenuItem>\n        </Link>\n        <Link to=\"/scorerList\">\n          <MenuItem>채점자 관리</MenuItem>\n        </Link>\n        <Link to=\"/scoreResultList\">\n          <MenuItem>채점결과 관리</MenuItem>\n        </Link>\n      </MenuWrapper>\n    </FullScreen>\n  );\n};\n\nexport default StartAdminPageComponent;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\n\nconst FullScreen = styled.div`\n  position: fixed;\n  z-index: 30;\n  top: 4rem;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* background: rgba(0, 0, 0, 0.25); */\n  background: ${palette.gray[9]};\n`;\nconst MenuWrapper = styled.div`\n  width: 512px;\n  // width 가 주어진 상태에서 좌우 중앙 정렬\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: -12rem;\n  overflow: hidden;\n`;\nconst MenuItem = styled.div`\n  font-size: 3rem;\n  font-weight: bold;\n  letter-spacing: 5px;\n  margin-bottom: 0.5rem;\n  color: ${palette.gray[4]};\n  &:hover {\n    cursor: pointer;\n    color: ${palette.cyan[6]};\n  }\n`;\n\nconst StartPageComponent = () => {\n  return (\n    <FullScreen>\n      <MenuWrapper>\n        <Link to=\"/testscorelist\">\n          <MenuItem>채점하기</MenuItem>\n        </Link>\n        {/* <Link to=\"/scoredList\">\n          <MenuItem>채점내역 / 수정</MenuItem>\n        </Link> */}\n      </MenuWrapper>\n    </FullScreen>\n  );\n};\n\nexport default StartPageComponent;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport StartAdminPageComponent from '../../components/start/StartAdminPageComponent';\nimport StartPageComponent from '../../components/start/StartPageComponent';\n\nconst StartPageContainer = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\n  console.log('user', user);\n  if (!user) return <></>;\n\n  if (user.admin === true) {\n    return <StartAdminPageComponent />;\n  } else {\n    return <StartPageComponent />;\n  }\n};\n\nexport default StartPageContainer;\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport StartPageContainer from '../containers/start/StartPageContainer';\n\nconst StartPage = () => {\n  return (\n    <div>\n      <HeaderContainer />\n      <StartPageContainer />\n    </div>\n  );\n};\n\nexport default StartPage;\n","import React, { useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport palette from '../../lib/styles/palette';\n\nconst CriteriaItemBlock = styled.div`\n  display: flex;\n  padding: 0.5rem;\n  border-top: 1px solid ${palette.gray[3]};\n  &:hover {\n    cursor: pointer;\n    background: ${palette.cyan[1]};\n  }\n  ${props =>\n    props.active &&\n    css`\n      background: ${palette.gray[3]};\n    `}\n`;\n\nconst DescBlock = styled.div`\n  width: 100%;\n  display: flex;\n`;\n\nconst CheckBoxBlock = styled.div`\n  width: 15px;\n  margin-right: 10px;\n`;\n\nconst QuestionNoBlock = styled.div`\n  width: 100px;\n`;\n\nconst QuestionScoreBlock = styled.div`\n  width: 50px;\n`;\n\nconst DetailsBlock = styled.div`\n  flex: 1;\n`;\nconst DetailItemBlock = styled.div`\n  text-align: left;\n  margin-right: 0.25rem;\n  overflow: none;\n`;\n\nconst ScorerEditItemComponent = ({\n  criteria,\n  selectedScorer,\n  onCheckedChange,\n}) => {\n  const inputRef = useRef(null);\n  const isAuth = () => {\n    return criteria.scoreAuth.some(auth => auth._id === selectedScorer._id);\n  };\n\n  const onChange = () => {\n    const newCriteria = { ...criteria };\n\n    if (inputRef.current.checked) {\n      newCriteria.scoreAuth.push(selectedScorer);\n    } else {\n      newCriteria.scoreAuth = newCriteria.scoreAuth.filter(\n        auth => auth._id !== selectedScorer._id,\n      );\n    }\n    console.log('newCriteria', newCriteria);\n    onCheckedChange(newCriteria);\n  };\n\n  const onItemClick = () => {\n    inputRef.current.checked = !inputRef.current.checked;\n    onChange();\n  };\n\n  return (\n    <CriteriaItemBlock active={criteria.scoreAuth.length > 0}>\n      <CheckBoxBlock>\n        <input\n          ref={inputRef}\n          id={criteria._id}\n          type=\"checkbox\"\n          checked={isAuth()}\n          onChange={onChange}\n        />\n      </CheckBoxBlock>\n      <DescBlock onClick={onItemClick}>\n        <QuestionNoBlock>{criteria.question.no}번</QuestionNoBlock>\n        <QuestionScoreBlock>{criteria.question.score}점</QuestionScoreBlock>\n        <DetailsBlock>\n          {criteria.details.map((detail, index) => (\n            <DetailItemBlock key={index}>\n              {index + 1}. {detail.text}\n            </DetailItemBlock>\n          ))}\n        </DetailsBlock>\n      </DescBlock>\n    </CriteriaItemBlock>\n  );\n};\n\nexport default ScorerEditItemComponent;\n","import React, { useState, useEffect } from 'react';\nimport { list } from '../../lib/api/auth';\nimport styled, { css } from 'styled-components';\nimport Button from '../common/Button';\nimport AskModal from '../common/AskModal';\nimport Responsive from '../common/Responsive';\nimport palette from '../../lib/styles/palette';\nimport ScorerEditItemComponent from '../criterias/ScorerEditItemComponent';\n\nconst Container = styled(Responsive)`\n  display: flex;\n  overflow: none;\n`;\n\nconst Nav = styled.div`\n  overflow: scroll;\n  width: 160px;\n  background: ${palette.gray[2]};\n`;\n\nconst Section = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n  background: ${palette.gray[1]};\n`;\n\nconst ButtonWrapperBlock = styled.div`\n  display: flex;\n  margin: 0.5rem;\n`;\n\nconst TestInfoSelect = styled.select`\n  width: 480px;\n  height: 1.5rem;\n  font-size: 1rem;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n`;\n\nconst ButtonHolder = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n`;\n\nconst StyledButton = styled(Button)`\n  height: 2rem;\n  & + & {\n    margin-left: 0.75rem;\n  }\n`;\n\nconst ScorerNameBlock = styled.div`\n  padding: 1rem;\n  border-top: 1px solid #dee2e6;\n  &:hover {\n    cursor: pointer;\n    background: ${palette.cyan[1]};\n  }\n  ${props =>\n    props.active &&\n    css`\n      background: ${palette.cyan[5]};\n    `}\n`;\n\nconst CriteriaListBlock = styled.div`\n  display: flex;\n  overflow: scroll;\n  flex-direction: column;\n`;\n\nconst ScorerManageComponent = ({\n  testinfos,\n  onTestNameChange,\n  onScorerInfoChange,\n  onUpdateCriteriaList,\n  onInitializeCriteriaList,\n  criterias,\n  changedCriterias,\n  criteriasResult,\n  loading,\n}) => {\n  const [selectedScorer, setSelectedScorer] = useState(null);\n  const [scorerList, setScorerList] = useState([]);\n  const [selectValue, setSelectValue] = useState('');\n  const [updateCompleteModal, setUpdateCompleteModal] = useState(false);\n\n  const fetchScorerList = async () => {\n    const result = await list();\n    var scorers = result.data;\n    scorers.sort((a, b) => (a.username > b.username ? 1 : -1));\n    setScorerList(scorers);\n    setSelectedScorer(result.data[0]);\n  };\n  useEffect(() => {\n    fetchScorerList();\n  }, []);\n\n  useEffect(() => {\n    const testName = '';\n    setSelectValue(testName);\n    onInitializeCriteriaList();\n    if (criteriasResult) {\n      setUpdateCompleteModal(false);\n    }\n  }, [criteriasResult]);\n\n  const onScorerNameClick = e => {\n    const scorerId = e.target.getAttribute('id');\n    const scorerName = e.target.innerHTML;\n\n    const testName = '';\n    setSelectValue(testName);\n    onInitializeCriteriaList();\n    setSelectedScorer({ _id: scorerId, username: scorerName });\n  };\n\n  const onChangeSelect = e => {\n    const testName = e.target.value;\n    setSelectValue(testName);\n    onTestNameChange({ testName });\n  };\n\n  const onCheckedChange = newCriteria => {\n    const newCriterias = [];\n    for (const criteria of criterias) {\n      if (criteria._id === newCriteria._id) {\n        newCriterias.push(newCriteria);\n      } else {\n        newCriterias.push(criteria);\n      }\n    }\n\n    // 이미 있으면 제거, 없으면 추가\n    var newChangedCriterias = changedCriterias ? [...changedCriterias] : [];\n    const findIndex = newChangedCriterias.findIndex(\n      criteria => criteria._id === newCriteria._id,\n    );\n    if (findIndex < 0) {\n      newChangedCriterias.push(newCriteria);\n    } else {\n      newChangedCriterias.splice(findIndex, 1);\n    }\n\n    onScorerInfoChange({\n      criterias: newCriterias,\n      changedCriterias: newChangedCriterias,\n    });\n  };\n\n  const onUpdateClick = () => {\n    setUpdateCompleteModal(true);\n    onUpdateCriteriaList({\n      criterias: criterias,\n      changedCriterias: changedCriterias,\n    });\n  };\n\n  const onUpdateConfirm = () => {\n    setUpdateCompleteModal(false);\n  };\n\n  return (\n    <>\n      <Container>\n        <Nav>\n          {scorerList.map(scorer => (\n            <ScorerNameBlock\n              key={scorer._id}\n              id={scorer._id}\n              active={selectedScorer && scorer._id === selectedScorer._id}\n              onClick={onScorerNameClick}\n            >\n              {scorer.username}\n            </ScorerNameBlock>\n          ))}\n        </Nav>\n        <Section>\n          <ButtonWrapperBlock>\n            시험명 :\n            <TestInfoSelect\n              name=\"testinfoSelect\"\n              value={selectValue}\n              onChange={onChangeSelect}\n            >\n              <option>시험명을 선택해 주세요...</option>\n              {testinfos &&\n                testinfos.map(info => (\n                  <option key={info._id}>{info.testName}</option>\n                ))}\n            </TestInfoSelect>\n            <ButtonHolder>\n              <Button cyan onClick={onUpdateClick}>\n                수정사항 반영\n              </Button>\n            </ButtonHolder>\n          </ButtonWrapperBlock>\n          <CriteriaListBlock>\n            {criterias &&\n              criterias.map(criteria => (\n                <ScorerEditItemComponent\n                  key={criteria._id}\n                  criteria={criteria}\n                  selectedScorer={selectedScorer}\n                  onCheckedChange={onCheckedChange}\n                />\n              ))}\n          </CriteriaListBlock>\n        </Section>\n      </Container>\n      <AskModal\n        showCancel={false}\n        visible={updateCompleteModal}\n        title={criteriasResult ? '수정 사항 반영 완료' : '수정 사항 반영 중'}\n        description={JSON.stringify(criteriasResult, null, 4)}\n        // description={\n        //   criteriasResult\n        //     ? '수정 사항 반영이 완료 되었습니다.'\n        //     : '수정 사항 반영 중입니다.'\n        // }\n        onConfirm={onUpdateConfirm}\n      />\n    </>\n  );\n};\n\nexport default ScorerManageComponent;\n","import React, { useEffect, useCallback } from 'react';\nimport ScorerManageComponent from '../../components/score/ScorerManageComponent';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listTestinfo } from '../../modules/testinfos';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport {\n  listCriteria,\n  initializeList,\n  changeCriterias,\n  updateCriterias,\n} from '../../modules/criterias';\n\nconst ScorerManageContainer = ({ location }) => {\n  const dispatch = useDispatch();\n  const {\n    testinfos,\n    criterias,\n    loading,\n    changedCriterias,\n    criteriasResult,\n  } = useSelector(({ testinfos, criterias, loading }) => ({\n    testinfos: testinfos.testinfos,\n    criterias: criterias.criterias,\n    changedCriterias: criterias.changedCriterias,\n    criteriasResult: criterias.result,\n    loading: loading['scores/LIST_SCORE'],\n  }));\n\n  useEffect(() => {\n    const { page } = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n    dispatch(listTestinfo({ page }));\n    return () => {\n      dispatch(initializeList());\n    };\n  }, [location.search]);\n\n  // useEffect(() => {\n  //   dispatch(initializeList());\n  // }, [criteriasResult]);\n\n  const onTestNameChange = useCallback(\n    payload => dispatch(listCriteria(payload)),\n    [dispatch],\n  );\n\n  const onScorerInfoChange = useCallback(\n    payload => {\n      dispatch(changeCriterias(payload));\n    },\n    [dispatch],\n  );\n\n  const onInitializeCriteriaList = () => {\n    dispatch(initializeList());\n  };\n\n  const onUpdateCriteriaList = useCallback(\n    payload => dispatch(updateCriterias(payload)),\n    [dispatch],\n  );\n\n  return (\n    <ScorerManageComponent\n      testinfos={testinfos}\n      loading={loading}\n      criterias={criterias}\n      changedCriterias={changedCriterias}\n      criteriasResult={criteriasResult}\n      onTestNameChange={onTestNameChange}\n      onScorerInfoChange={onScorerInfoChange}\n      onInitializeCriteriaList={onInitializeCriteriaList}\n      onUpdateCriteriaList={onUpdateCriteriaList}\n    />\n  );\n};\n\nexport default withRouter(ScorerManageContainer);\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport ScorerManageContainer from '../containers/score/ScorerManageContainer';\n\nconst ScorerManagePage = () => {\n  return (\n    <>\n      <HeaderContainer />\n      <ScorerManageContainer />\n    </>\n  );\n};\n\nexport default ScorerManagePage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport qs from 'qs';\n\nimport {\n  ScoredItemBlock,\n  QuestionNoBlock,\n  TestNameBlock,\n  QuestionStateBlock,\n  CriteriasBlock,\n} from './Common/ScoreBlocks';\n\nconst CriteriaBlock = styled.div`\n  display: flex;\n`;\nconst CriteriaSubItemBlock = styled.div`\n  width: 100px;\n`;\nconst CriteriaDetilasBlock = styled.div`\n  flex: 1;\n`;\n\nconst ScoreMyCriteriaItemComponent = ({ criteria, testName, user, stat }) => {\n  const getCriteriaStrings = criteria => {\n    var res = '';\n    for (const detail of criteria.details) {\n      res += detail.text + ' / ';\n    }\n    return res;\n  };\n\n  const linkPath = `/scoredlist/?${qs.stringify({\n    testName,\n    scoreAuth: user.username,\n    questionNo: criteria.question.no,\n  })}`;\n\n  var statStr = '';\n  if (stat !== null) {\n    for (const statItem of stat) {\n      if (statItem.questionNo === criteria.question.no) {\n        statStr = statItem.done + ' / ' + statItem.total;\n      }\n    }\n  }\n\n  return (\n    <Link to={linkPath}>\n      <ScoredItemBlock>\n        <QuestionNoBlock>{criteria.question.no}</QuestionNoBlock>\n        <CriteriasBlock>{getCriteriaStrings(criteria)}</CriteriasBlock>\n        <div>{statStr}</div>\n      </ScoredItemBlock>\n    </Link>\n  );\n};\n\nexport default ScoreMyCriteriaItemComponent;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ScoreListWrapper } from './Common/ScoreBlocks';\nimport ScoreMyCriteriaItemComponent from './ScoreMyCriteriaItemComponent';\n\nconst ScoreMyCriteriaComponent = ({ testName, criterias, user, stat }) => {\n  return (\n    <ScoreListWrapper>\n      <h3>{testName}</h3>\n      {criterias &&\n        criterias.map(criteria => {\n          return (\n            <ScoreMyCriteriaItemComponent\n              key={criteria._id}\n              user={user}\n              criteria={criteria}\n              testName={testName}\n              stat={stat}\n            />\n          );\n        })}\n    </ScoreListWrapper>\n  );\n};\n\nexport default ScoreMyCriteriaComponent;\n","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as statAPI from '../lib/api/stat';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst INITIALIZE_STAT = 'stat/INITIALE_LIST';\nexport const initializeList = createAction(INITIALIZE_STAT);\n\nconst [\n  LIST_STAT,\n  LIST_STAT_SUCCESS,\n  LIST_STAT_FAILURE,\n] = createRequestActionTypes('stat/LIST_STAT');\n\nconst [\n  TESTINFO_STAT,\n  TESTINFO_STAT_SUCCESS,\n  TESTINFO_STAT_FAILURE,\n] = createRequestActionTypes('stat/TESTINFO_STAT');\n\nexport const listStat = createAction(\n  LIST_STAT,\n  ({ testName, scoreAuth, questionNos }) => ({\n    testName,\n    scoreAuth,\n    questionNos,\n  }),\n);\n\nconst listStatSaga = createRequestSaga(LIST_STAT, statAPI.processedStat);\n\nexport const testInfoStat = createAction(TESTINFO_STAT, ({ testName }) => ({\n  testName,\n}));\n\nconst testInfoStatSaga = createRequestSaga(\n  TESTINFO_STAT,\n  statAPI.testInfoScoredStat,\n);\n\nexport function* statSaga() {\n  yield takeLatest(LIST_STAT, listStatSaga);\n  yield takeLatest(TESTINFO_STAT, testInfoStatSaga);\n}\n\nconst initialState = {\n  stat: null,\n  error: null,\n};\n\nconst stat = handleActions(\n  {\n    [INITIALIZE_STAT]: state => initialState,\n    [TESTINFO_STAT_SUCCESS]: (state, { payload: stat }) => ({\n      ...state,\n      stat,\n    }),\n    [TESTINFO_STAT_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n    [LIST_STAT_SUCCESS]: (state, { payload: stat }) => ({\n      ...state,\n      stat,\n    }),\n    [LIST_STAT_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n  },\n  initialState,\n);\n\nexport default stat;\n","import client from './client';\nimport qs from 'qs';\n\nexport const processedStat = query => {\n  return client.post(`/api/score/stat`, { query });\n};\n\nexport const testInfoScoredStat = query => {\n  const { testName } = query;\n\n  var path = `/api/score/stat`;\n  const queryString = qs.stringify({ testName });\n  path = path + `?${queryString}`;\n\n  return client.get(path);\n};\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ScoreMyCriteriaComponent from '../../components/score/ScoreMyCriteriaComponent';\nimport { listCriteria } from '../../modules/criterias';\nimport { listStat } from '../../modules/stat';\n\nconst ScoreMyCriteriaListContainer = ({ match }) => {\n  const { testName } = match.params;\n\n  const dispatch = useDispatch();\n  const { criterias, error, loading, stat, user } = useSelector(\n    ({ criterias, loading, user, stat }) => ({\n      criterias: criterias.criterias,\n      error: criterias.error,\n      loading: loading['criterias/LIST_CRITERIA'],\n      user: user.user,\n      stat: stat.stat,\n    }),\n  );\n\n  useEffect(() => {\n    if (user) {\n      dispatch(listCriteria({ testName, userId: user._id }));\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (criterias === null) return;\n\n    var questionNos = [];\n    for (const criteria of criterias) {\n      questionNos.push(criteria.question.no);\n    }\n    dispatch(listStat({ testName, scoreAuth: user.username, questionNos }));\n  }, [criterias]);\n\n  return (\n    <ScoreMyCriteriaComponent\n      user={user}\n      testName={testName}\n      criterias={criterias}\n      stat={stat}\n    />\n  );\n};\n\nexport default withRouter(ScoreMyCriteriaListContainer);\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport ScoreMyCriteriaListContainer from '../containers/score/ScoreMyCriteriaListContainer';\n\nconst ScoreMyListPage = () => {\n  return (\n    <div>\n      <HeaderContainer />\n      <ScoreMyCriteriaListContainer />\n    </div>\n  );\n};\n\nexport default ScoreMyListPage;\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport { Link } from 'react-router-dom';\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n        padding:0;\n        margin:0;\n        background: #e9ecef;\n    }\n`;\n\nconst TestInfoListBlock = styled.div`\n  width: 512px;\n  // width 가 주어진 상태에서 좌우 중앙 정렬\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 6rem;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nconst TestInfoListTitle = styled.div`\n  background: #22b8cf;\n  color: white;\n  height: 4rem;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst TestInfoListBody = styled.div`\n  background: white;\n`;\n\nconst TestInfoItemBlock = styled.div`\n  padding: 1rem;\n  display: flex;\n  align-items: center;\n  border-top: 1px solid #dee2e6;\n  background: white;\n  &:nth-child(odd) {\n    background: ${palette.gray[1]};\n  }\n  &:hover {\n    cursor: pointer;\n    background: ${palette.gray[3]};\n  }\n`;\n\nconst ScoreResultListComponent = ({ testinfos, error, loading }) => {\n  return (\n    <div>\n      <GlobalStyle />\n      <TestInfoListBlock>\n        <TestInfoListTitle>시험 리스트</TestInfoListTitle>\n\n        {!loading && testinfos && (\n          <div>\n            {testinfos.map((testinfo, index) => (\n              <Link to={`/scoreResult/${testinfo.testName}`} key={index}>\n                <TestInfoItemBlock>{testinfo.testName}</TestInfoItemBlock>\n              </Link>\n            ))}\n          </div>\n        )}\n      </TestInfoListBlock>\n    </div>\n  );\n};\n\nexport default ScoreResultListComponent;\n","import React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { listTestinfo } from '../../modules/testinfos';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ScoreResultListComponent from '../../components/result/ScoreResultListComponent';\n\nconst ScoreResultListContainer = ({ location }) => {\n  const dispatch = useDispatch();\n\n  const { testinfos, error, loading } = useSelector(\n    ({ testinfos, loading }) => ({\n      testinfos: testinfos.testinfos,\n      error: testinfos.error,\n      loading: loading['testinfo/LIST_TESTINFO'],\n    }),\n  );\n\n  useEffect(() => {\n    const { page } = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n\n    dispatch(listTestinfo({ page }));\n  }, [location.search]);\n\n  return (\n    <div>\n      <ScoreResultListComponent\n        testinfos={testinfos}\n        error={error}\n        loading={loading}\n      />\n    </div>\n  );\n};\n\nexport default withRouter(ScoreResultListContainer);\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport ScoreResultListContainer from '../containers/result/ScoreResultListContainer';\n\nconst ScoreResultListPage = () => {\n  return (\n    <div>\n      <HeaderContainer />\n      <ScoreResultListContainer />\n    </div>\n  );\n};\n\nexport default ScoreResultListPage;\n","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\n\nimport { takeLatest } from 'redux-saga/effects';\nimport * as exportAPI from '../lib/api/export';\n\nconst INITIALIZE = 'exportExcel/INITIALIZE';\nexport const initializeExport = createAction(INITIALIZE);\n\nconst [\n  EXPORT_EXCEL,\n  EXPORT_EXCEL_SUCCESS,\n  EXPORT_EXCEL_FAILURE,\n] = createRequestActionTypes('exportExcel/EXPORT');\n\nconst UNLOAD_FILE_INFO = 'exportExcel/UNLOAD_FILE_INFO'; // 페이지 벗어날때 데이터 비우기\n\nexport const unloadFileInfo = createAction(UNLOAD_FILE_INFO);\n\nexport const exportExcel = createAction(EXPORT_EXCEL, ({ testName }) => ({\n  testName,\n}));\n\nconst exportExcelSaga = createRequestSaga(EXPORT_EXCEL, exportAPI.exportExcel);\n\nexport function* exportSaga() {\n  yield takeLatest(EXPORT_EXCEL, exportExcelSaga);\n}\n\nconst initialExportExcel = {\n  fileName: null,\n  error: null,\n};\n\nconst export_excel = handleActions(\n  {\n    [INITIALIZE]: state => initialExportExcel,\n    [EXPORT_EXCEL_SUCCESS]: (state, { payload: fileName }) => ({\n      ...state,\n      fileName,\n    }),\n    [EXPORT_EXCEL_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n    [UNLOAD_FILE_INFO]: () => initialExportExcel,\n  },\n  initialExportExcel,\n);\n\nexport default export_excel;\n","import client from './client';\nimport qs from 'qs';\n\nexport const exportExcel = query => {\n  const { testName } = query;\n  const path = `/api/score/export/${testName}`;\n  return client.get(path);\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Button from '../common/Button';\nimport AskModal from '../common/AskModal';\nimport { Link } from 'react-router-dom';\nimport Responsive from '../common/Responsive';\n  \nconst ScorerResultComponentBlock = styled(Responsive)`\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ProgressDiv = styled.div`\n  margin: 8px;\n  align-items: center;\n  display: flex;\n  font-size: 1.125rem;\n  font-weight: 500;\n  letter-spacing: 2px;\n`;\n\nconst ScoreResultComponent = ({\n  testName,\n  stat,\n  onExportClicked,\n  exportFileName,\n}) => {\n  const desc = `엑셀 데이터로 변환하는 중입니다.`;\n  const [modal, setModal] = useState(false);\n  const onConfirm = () => {\n    setModal(false);\n  };\n\n  const onExportButtonClicked = () => {\n    setModal(true);\n    onExportClicked();\n  };\n\n  useEffect(() => {\n    setModal(false);\n  }, [exportFileName]);\n\n  return (\n    <ScorerResultComponentBlock>\n      <h3>{testName}</h3>\n      {stat && (\n        <>\n          <ProgressDiv>총 문제수 : {stat.totalCount}</ProgressDiv>\n          <ProgressDiv>처리 완료 : {stat.doneCount}</ProgressDiv>\n          <ProgressDiv>처리 중 : {stat.processCount}</ProgressDiv>\n          <ProgressDiv>\n            미처리 : {stat.totalCount - stat.doneCount - stat.processCount}\n          </ProgressDiv>\n        </>\n      )}\n      <Button cyan big onClick={onExportButtonClicked}>\n        Export\n      </Button>\n      {exportFileName && (\n        <Link to={exportFileName.fileName} target=\"_blank\" download>\n          <Button big style={{ marginLeft: '0.8rem' }}>\n          Download\n          </Button>\n          \n        </Link>\n      )}\n\n      <AskModal\n        visible={modal}\n        title={testName}\n        description={desc}\n        onConfirm={onConfirm}\n        showCancel={false}\n        showProgressbar={true}\n      />\n    </ScorerResultComponentBlock>\n  );\n};\n\nexport default ScoreResultComponent;\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { testInfoStat } from '../../modules/stat';\nimport { exportExcel, unloadFileInfo } from '../../modules/export_excel';\nimport ScoreResultComponent from '../../components/result/ScoreResultComponent';\n\nconst ScoreResultContainer = ({ match }) => {\n  const { testName } = match.params;\n\n  const { stat, user, fileName } = useSelector(\n    ({ user, stat, export_excel }) => ({\n      user: user.user,\n      stat: stat.stat,\n      fileName: export_excel.fileName,\n    }),\n  );\n\n  useEffect(() => {\n    dispatch(testInfoStat({ testName }));\n    return () =>{\n      // 언마운트 될때 리덕스에서 export file info 제거하기 \n      console.log(\"언마운트 될때 리덕스에서 export file info 제거하기 \")\n      dispatch(unloadFileInfo());\n    }\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const onExportClicked = () => {\n    dispatch(exportExcel({ testName }));\n  };\n\n  return (\n    <ScoreResultComponent\n      testName={testName}\n      stat={stat}\n      onExportClicked={onExportClicked}\n      exportFileName={fileName}\n    />\n  );\n};\n\nexport default withRouter(ScoreResultContainer);\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport ScoreResultContainer from '../containers/result/ScoreResultContainer';\n\nconst ScoreResultPage = () => {\n  return (\n    <div>\n      <HeaderContainer />\n      <ScoreResultContainer />\n    </div>\n  );\n};\n\nexport default ScoreResultPage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CriteriaListPage from './pages/CriteriaListPage';\nimport CriteriaPage from './pages/CriteriaPage';\nimport CriteriaWritePage from './pages/CriteriaWritePage';\nimport RegisterPage from './pages/RegisterPage';\nimport LoginPage from './pages/LoginPage';\nimport ReadCriteriaPage from './pages/ReadCriteriaPage';\nimport TestInfoListPage from './pages/TestInfoListPage';\nimport TestScoreListPage from './pages/TestScoreListPage';\nimport ScorePage from './pages/ScorePage';\nimport ScoredListPage from './pages/ScoredListPage';\nimport ScoreEditPage from './pages/ScoreEditPage';\nimport StartPage from './pages/StartPage';\nimport ScorerManagePage from './pages/ScorerManagePage';\nimport ScoreMyListPage from './pages/ScoreMyListPage';\nimport ScoreMyCriteriaListPage from './pages/ScoreMyCriteriaListPage';\nimport ScoreResultListPage from './pages/ScoreResultListPage';\nimport ScoreResultPage from './pages/ScoreResultPage';\nimport { Helmet } from 'react-helmet-async';\n\nfunction App() {\n  return (\n    <>\n      <Helmet>\n        <title>채점관리 시스템</title>\n      </Helmet>\n      <Route component={StartPage} path={['/']} exact />\n      <Route component={ScoreResultListPage} path={['/scoreResultList']} />\n      <Route component={ScoreResultPage} path={['/scoreResult/:testName']} />\n      <Route component={TestScoreListPage} path={['/testscorelist']} />\n      <Route component={ScoredListPage} path={['/scoredlist']} />\n      <Route component={ScoreEditPage} path={['/scoreEditPage']} />\n      <Route component={TestInfoListPage} path={['/testlist']} exact />\n      <Route component={ScorerManagePage} path={['/scorerList']} exact />\n      <Route\n        component={CriteriaListPage}\n        path={['/listCriteria/:testinfoId']}\n        exact\n      />\n      <Route component={LoginPage} path={'/login'} />\n      <Route component={RegisterPage} path={'/register'} />\n      <Route\n        component={CriteriaWritePage}\n        path={'/writeCriteria/:testinfoId'}\n      />\n      <Route component={CriteriaPage} path={'/@:username/:criteriaId'} />\n      <Route component={ReadCriteriaPage} path={'/readCriteria/:criteriaId'} />\n      <Route component={ScorePage} path={'/score/:testName'} />\n      <Route component={ScoreMyListPage} path={'/scoremylist/:testName'} />\n      {/* <Route\n        component={ScoreMyCriteriaListPage} // 이 페이지는 사용되고 있는데가 없는듯?\n        path={'/scoremycriterialist'}\n      /> */}\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport auth, { authSaga } from './auth';\nimport loading from './loading';\nimport user, { userSaga } from './user';\nimport criteria, { writeCriteriaSaga, readCriteriaSaga } from './criteria';\nimport criterias, { criteriasSage } from './criterias';\nimport testinfos, { listTestinfoRequestSaga } from './testinfos';\nimport testinfo, { testInfoSaga } from './testinfo';\nimport testinfo_update, { testinfoUpdateSaga } from './testinfo_update';\nimport score, { scoreSaga } from './score';\nimport scores, { scoreListSaga } from './scores';\nimport stat, { statSaga } from './stat';\nimport export_excel, { exportSaga } from './export_excel';\n\nconst rootReducer = combineReducers({\n  auth,\n  loading,\n  user,\n  criteria,\n  criterias,\n  testinfos,\n  testinfo,\n  testinfo_update,\n  score,\n  scores,\n  stat,\n  export_excel,\n});\n\nexport function* rootSaga() {\n  yield all([\n    authSaga(),\n    userSaga(),\n    writeCriteriaSaga(),\n    readCriteriaSaga(),\n    criteriasSage(),\n    listTestinfoRequestSaga(),\n    testInfoSaga(),\n    testinfoUpdateSaga(),\n    scoreSaga(),\n    scoreListSaga(),\n    statSaga(),\n    exportSaga(),\n  ]);\n}\n\nexport default rootReducer;\n","import dotenv from 'dotenv';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\nimport { tempSetUser, check } from './modules/user';\nimport { HelmetProvider } from 'react-helmet-async';\n\ndotenv.config();\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nfunction loadUser() {\n  try {\n    const user = localStorage.getItem('user');\n    if (!user) return; // 로그인 상태가 아니라면 아무것도 하지않음\n\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nsagaMiddleware.run(rootSaga);\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <HelmetProvider>\n        <App />\n      </HelmetProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n// todo 1 : 채점기준 입력 validation - 문제번호 0, 점수 0 일때 입력하라고 alert 띄우기 \n// DONE - todo 2 : 새 채점 기준 작성하기 버튼 layout \n// DONE - todo 3 : 채점 영역 선택할때 drag 로 선택할때 버그 수정할 것\n// todo 4 : 채점기준 입력시 같은 내용 있으면 입력되지 않는다고 알리는 alert 띄우기 \n// todo 5 : 채점기준 입력시 각 채점기준의 합이 총 점수와 동일하지 않으면 alert 띄우기\n// todo 6 : 채점기준 입력시 선택된 이미지 영역 보여주는 곳에 zoom level 조절할 수 있어야 할듯?\n// todo 7 : 채점할때 채점완료 버튼 누르지 않고 이전 버튼 눌렀을때 이전이 아닌 채점이 안된 문제가 보임\n// todo 8 : 채점할때 x,y position 입력하는 부분 삭제할 것\n"],"sourceRoot":""}